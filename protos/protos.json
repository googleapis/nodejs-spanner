{
  "nested": {
    "google": {
      "nested": {
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "string",
                  "id": 13
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Struct": {
              "fields": {
                "fields": {
                  "keyType": "string",
                  "type": "Value",
                  "id": 1
                }
              }
            },
            "Value": {
              "oneofs": {
                "kind": {
                  "oneof": [
                    "nullValue",
                    "numberValue",
                    "stringValue",
                    "boolValue",
                    "structValue",
                    "listValue"
                  ]
                }
              },
              "fields": {
                "nullValue": {
                  "type": "NullValue",
                  "id": 1
                },
                "numberValue": {
                  "type": "double",
                  "id": 2
                },
                "stringValue": {
                  "type": "string",
                  "id": 3
                },
                "boolValue": {
                  "type": "bool",
                  "id": 4
                },
                "structValue": {
                  "type": "Struct",
                  "id": 5
                },
                "listValue": {
                  "type": "ListValue",
                  "id": 6
                }
              }
            },
            "NullValue": {
              "values": {
                "NULL_VALUE": 0
              }
            },
            "ListValue": {
              "fields": {
                "values": {
                  "rule": "repeated",
                  "type": "Value",
                  "id": 1
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC",
            "cc_enable_arenas": true
          },
          "nested": {
            "RetryInfo": {
              "fields": {
                "retryDelay": {
                  "type": "google.protobuf.Duration",
                  "id": 1
                }
              }
            },
            "DebugInfo": {
              "fields": {
                "stackEntries": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                },
                "detail": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "QuotaFailure": {
              "fields": {
                "violations": {
                  "rule": "repeated",
                  "type": "Violation",
                  "id": 1
                }
              },
              "nested": {
                "Violation": {
                  "fields": {
                    "subject": {
                      "type": "string",
                      "id": 1
                    },
                    "description": {
                      "type": "string",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ErrorInfo": {
              "fields": {
                "reason": {
                  "type": "string",
                  "id": 1
                },
                "domain": {
                  "type": "string",
                  "id": 2
                },
                "metadata": {
                  "keyType": "string",
                  "type": "string",
                  "id": 3
                }
              }
            },
            "PreconditionFailure": {
              "fields": {
                "violations": {
                  "rule": "repeated",
                  "type": "Violation",
                  "id": 1
                }
              },
              "nested": {
                "Violation": {
                  "fields": {
                    "type": {
                      "type": "string",
                      "id": 1
                    },
                    "subject": {
                      "type": "string",
                      "id": 2
                    },
                    "description": {
                      "type": "string",
                      "id": 3
                    }
                  }
                }
              }
            },
            "BadRequest": {
              "fields": {
                "fieldViolations": {
                  "rule": "repeated",
                  "type": "FieldViolation",
                  "id": 1
                }
              },
              "nested": {
                "FieldViolation": {
                  "fields": {
                    "field": {
                      "type": "string",
                      "id": 1
                    },
                    "description": {
                      "type": "string",
                      "id": 2
                    }
                  }
                }
              }
            },
            "RequestInfo": {
              "fields": {
                "requestId": {
                  "type": "string",
                  "id": 1
                },
                "servingData": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "ResourceInfo": {
              "fields": {
                "resourceType": {
                  "type": "string",
                  "id": 1
                },
                "resourceName": {
                  "type": "string",
                  "id": 2
                },
                "owner": {
                  "type": "string",
                  "id": 3
                },
                "description": {
                  "type": "string",
                  "id": 4
                }
              }
            },
            "Help": {
              "fields": {
                "links": {
                  "rule": "repeated",
                  "type": "Link",
                  "id": 1
                }
              },
              "nested": {
                "Link": {
                  "fields": {
                    "description": {
                      "type": "string",
                      "id": 1
                    },
                    "url": {
                      "type": "string",
                      "id": 2
                    }
                  }
                }
              }
            },
            "LocalizedMessage": {
              "fields": {
                "locale": {
                  "type": "string",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        },
        "spanner": {
          "nested": {
            "admin": {
              "nested": {
                "database": {
                  "nested": {
                    "v1": {
                      "options": {
                        "csharp_namespace": "Google.Cloud.Spanner.Admin.Database.V1",
                        "go_package": "google.golang.org/genproto/googleapis/spanner/admin/database/v1;database",
                        "java_multiple_files": true,
                        "java_outer_classname": "SpannerDatabaseAdminProto",
                        "java_package": "com.google.spanner.admin.database.v1",
                        "php_namespace": "Google\\Cloud\\Spanner\\Admin\\Database\\V1",
                        "ruby_package": "Google::Cloud::Spanner::Admin::Database::V1",
                        "(google.api.resource_definition).type": "spanner.googleapis.com/Instance",
                        "(google.api.resource_definition).pattern": "projects/{project}/instances/{instance}"
                      },
                      "nested": {
                        "Backup": {
                          "options": {
                            "(google.api.resource).type": "spanner.googleapis.com/Backup",
                            "(google.api.resource).pattern": "projects/{project}/instances/{instance}/backups/{backup}"
                          },
                          "fields": {
                            "database": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            },
                            "versionTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 9
                            },
                            "expireTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            },
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "sizeBytes": {
                              "type": "int64",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "state": {
                              "type": "State",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "referencingDatabases": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 7,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            },
                            "encryptionInfo": {
                              "type": "EncryptionInfo",
                              "id": 8,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "databaseDialect": {
                              "type": "DatabaseDialect",
                              "id": 10,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "referencingBackups": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 11,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            },
                            "maxExpireTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 12,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "CREATING": 1,
                                "READY": 2
                              }
                            }
                          }
                        },
                        "CreateBackupRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "backupId": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "backup": {
                              "type": "Backup",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "encryptionConfig": {
                              "type": "CreateBackupEncryptionConfig",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "CreateBackupMetadata": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            },
                            "database": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            },
                            "progress": {
                              "type": "OperationProgress",
                              "id": 3
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            }
                          }
                        },
                        "CopyBackupRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "backupId": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "sourceBackup": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            },
                            "expireTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "encryptionConfig": {
                              "type": "CopyBackupEncryptionConfig",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "CopyBackupMetadata": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            },
                            "sourceBackup": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            },
                            "progress": {
                              "type": "OperationProgress",
                              "id": 3
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            }
                          }
                        },
                        "UpdateBackupRequest": {
                          "fields": {
                            "backup": {
                              "type": "Backup",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "GetBackupRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            }
                          }
                        },
                        "DeleteBackupRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            }
                          }
                        },
                        "ListBackupsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "filter": {
                              "type": "string",
                              "id": 2
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListBackupsResponse": {
                          "fields": {
                            "backups": {
                              "rule": "repeated",
                              "type": "Backup",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "ListBackupOperationsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "filter": {
                              "type": "string",
                              "id": 2
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListBackupOperationsResponse": {
                          "fields": {
                            "operations": {
                              "rule": "repeated",
                              "type": "google.longrunning.Operation",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "BackupInfo": {
                          "fields": {
                            "backup": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            },
                            "versionTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            },
                            "sourceDatabase": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            }
                          }
                        },
                        "CreateBackupEncryptionConfig": {
                          "fields": {
                            "encryptionType": {
                              "type": "EncryptionType",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "kmsKeyName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                              }
                            }
                          },
                          "nested": {
                            "EncryptionType": {
                              "values": {
                                "ENCRYPTION_TYPE_UNSPECIFIED": 0,
                                "USE_DATABASE_ENCRYPTION": 1,
                                "GOOGLE_DEFAULT_ENCRYPTION": 2,
                                "CUSTOMER_MANAGED_ENCRYPTION": 3
                              }
                            }
                          }
                        },
                        "CopyBackupEncryptionConfig": {
                          "fields": {
                            "encryptionType": {
                              "type": "EncryptionType",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "kmsKeyName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                              }
                            }
                          },
                          "nested": {
                            "EncryptionType": {
                              "values": {
                                "ENCRYPTION_TYPE_UNSPECIFIED": 0,
                                "USE_CONFIG_DEFAULT_OR_BACKUP_ENCRYPTION": 1,
                                "GOOGLE_DEFAULT_ENCRYPTION": 2,
                                "CUSTOMER_MANAGED_ENCRYPTION": 3
                              }
                            }
                          }
                        },
                        "OperationProgress": {
                          "fields": {
                            "progressPercent": {
                              "type": "int32",
                              "id": 1
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          }
                        },
                        "EncryptionConfig": {
                          "fields": {
                            "kmsKeyName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                              }
                            }
                          }
                        },
                        "EncryptionInfo": {
                          "fields": {
                            "encryptionType": {
                              "type": "Type",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "encryptionStatus": {
                              "type": "google.rpc.Status",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "kmsKeyVersion": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKeyVersion"
                              }
                            }
                          },
                          "nested": {
                            "Type": {
                              "values": {
                                "TYPE_UNSPECIFIED": 0,
                                "GOOGLE_DEFAULT_ENCRYPTION": 1,
                                "CUSTOMER_MANAGED_ENCRYPTION": 2
                              }
                            }
                          }
                        },
                        "DatabaseDialect": {
                          "values": {
                            "DATABASE_DIALECT_UNSPECIFIED": 0,
                            "GOOGLE_STANDARD_SQL": 1,
                            "POSTGRESQL": 2
                          }
                        },
                        "DatabaseAdmin": {
                          "options": {
                            "(google.api.default_host)": "spanner.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/spanner.admin"
                          },
                          "methods": {
                            "ListDatabases": {
                              "requestType": "ListDatabasesRequest",
                              "responseType": "ListDatabasesResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/instances/*}/databases",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/instances/*}/databases"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "CreateDatabase": {
                              "requestType": "CreateDatabaseRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v1/{parent=projects/*/instances/*}/databases",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "parent,create_statement",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.database.v1.Database",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.database.v1.CreateDatabaseMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{parent=projects/*/instances/*}/databases",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,create_statement"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.database.v1.Database",
                                    "metadata_type": "google.spanner.admin.database.v1.CreateDatabaseMetadata"
                                  }
                                }
                              ]
                            },
                            "GetDatabase": {
                              "requestType": "GetDatabaseRequest",
                              "responseType": "Database",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/instances/*/databases/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/instances/*/databases/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "UpdateDatabaseDdl": {
                              "requestType": "UpdateDatabaseDdlRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).patch": "/v1/{database=projects/*/instances/*/databases/*}/ddl",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "database,statements",
                                "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.database.v1.UpdateDatabaseDdlMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v1/{database=projects/*/instances/*/databases/*}/ddl",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "database,statements"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.protobuf.Empty",
                                    "metadata_type": "google.spanner.admin.database.v1.UpdateDatabaseDdlMetadata"
                                  }
                                }
                              ]
                            },
                            "DropDatabase": {
                              "requestType": "DropDatabaseRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v1/{database=projects/*/instances/*/databases/*}",
                                "(google.api.method_signature)": "database"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v1/{database=projects/*/instances/*/databases/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "database"
                                }
                              ]
                            },
                            "GetDatabaseDdl": {
                              "requestType": "GetDatabaseDdlRequest",
                              "responseType": "GetDatabaseDdlResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{database=projects/*/instances/*/databases/*}/ddl",
                                "(google.api.method_signature)": "database"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{database=projects/*/instances/*/databases/*}/ddl"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "database"
                                }
                              ]
                            },
                            "SetIamPolicy": {
                              "requestType": "google.iam.v1.SetIamPolicyRequest",
                              "responseType": "google.iam.v1.Policy",
                              "options": {
                                "(google.api.http).post": "/v1/{resource=projects/*/instances/*/databases/*}:setIamPolicy",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.post": "/v1/{resource=projects/*/instances/*/backups/*}:setIamPolicy",
                                "(google.api.http).additional_bindings.body": "*",
                                "(google.api.method_signature)": "resource,policy"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{resource=projects/*/instances/*/databases/*}:setIamPolicy",
                                    "body": "*",
                                    "additional_bindings": {
                                      "post": "/v1/{resource=projects/*/instances/*/backups/*}:setIamPolicy",
                                      "body": "*"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "resource,policy"
                                }
                              ]
                            },
                            "GetIamPolicy": {
                              "requestType": "google.iam.v1.GetIamPolicyRequest",
                              "responseType": "google.iam.v1.Policy",
                              "options": {
                                "(google.api.http).post": "/v1/{resource=projects/*/instances/*/databases/*}:getIamPolicy",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.post": "/v1/{resource=projects/*/instances/*/backups/*}:getIamPolicy",
                                "(google.api.http).additional_bindings.body": "*",
                                "(google.api.method_signature)": "resource"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{resource=projects/*/instances/*/databases/*}:getIamPolicy",
                                    "body": "*",
                                    "additional_bindings": {
                                      "post": "/v1/{resource=projects/*/instances/*/backups/*}:getIamPolicy",
                                      "body": "*"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "resource"
                                }
                              ]
                            },
                            "TestIamPermissions": {
                              "requestType": "google.iam.v1.TestIamPermissionsRequest",
                              "responseType": "google.iam.v1.TestIamPermissionsResponse",
                              "options": {
                                "(google.api.http).post": "/v1/{resource=projects/*/instances/*/databases/*}:testIamPermissions",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.post": "/v1/{resource=projects/*/instances/*/databases/*/databaseRoles/*}:testIamPermissions",
                                "(google.api.http).additional_bindings.body": "*",
                                "(google.api.method_signature)": "resource,permissions"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{resource=projects/*/instances/*/databases/*}:testIamPermissions",
                                    "body": "*",
                                    "additional_bindings": [
                                      {
                                        "post": "/v1/{resource=projects/*/instances/*/backups/*}:testIamPermissions",
                                        "body": "*"
                                      },
                                      {
                                        "post": "/v1/{resource=projects/*/instances/*/databases/*/databaseRoles/*}:testIamPermissions",
                                        "body": "*"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "resource,permissions"
                                }
                              ]
                            },
                            "CreateBackup": {
                              "requestType": "CreateBackupRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v1/{parent=projects/*/instances/*}/backups",
                                "(google.api.http).body": "backup",
                                "(google.api.method_signature)": "parent,backup,backup_id",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.database.v1.Backup",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.database.v1.CreateBackupMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{parent=projects/*/instances/*}/backups",
                                    "body": "backup"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,backup,backup_id"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.database.v1.Backup",
                                    "metadata_type": "google.spanner.admin.database.v1.CreateBackupMetadata"
                                  }
                                }
                              ]
                            },
                            "CopyBackup": {
                              "requestType": "CopyBackupRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v1/{parent=projects/*/instances/*}/backups:copy",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "parent,backup_id,source_backup,expire_time",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.database.v1.Backup",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.database.v1.CopyBackupMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{parent=projects/*/instances/*}/backups:copy",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,backup_id,source_backup,expire_time"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.database.v1.Backup",
                                    "metadata_type": "google.spanner.admin.database.v1.CopyBackupMetadata"
                                  }
                                }
                              ]
                            },
                            "GetBackup": {
                              "requestType": "GetBackupRequest",
                              "responseType": "Backup",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/instances/*/backups/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/instances/*/backups/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "UpdateBackup": {
                              "requestType": "UpdateBackupRequest",
                              "responseType": "Backup",
                              "options": {
                                "(google.api.http).patch": "/v1/{backup.name=projects/*/instances/*/backups/*}",
                                "(google.api.http).body": "backup",
                                "(google.api.method_signature)": "backup,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v1/{backup.name=projects/*/instances/*/backups/*}",
                                    "body": "backup"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "backup,update_mask"
                                }
                              ]
                            },
                            "DeleteBackup": {
                              "requestType": "DeleteBackupRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v1/{name=projects/*/instances/*/backups/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v1/{name=projects/*/instances/*/backups/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ListBackups": {
                              "requestType": "ListBackupsRequest",
                              "responseType": "ListBackupsResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/instances/*}/backups",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/instances/*}/backups"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "RestoreDatabase": {
                              "requestType": "RestoreDatabaseRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v1/{parent=projects/*/instances/*}/databases:restore",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "parent,database_id,backup",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.database.v1.Database",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.database.v1.RestoreDatabaseMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{parent=projects/*/instances/*}/databases:restore",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,database_id,backup"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.database.v1.Database",
                                    "metadata_type": "google.spanner.admin.database.v1.RestoreDatabaseMetadata"
                                  }
                                }
                              ]
                            },
                            "ListDatabaseOperations": {
                              "requestType": "ListDatabaseOperationsRequest",
                              "responseType": "ListDatabaseOperationsResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/instances/*}/databaseOperations",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/instances/*}/databaseOperations"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "ListBackupOperations": {
                              "requestType": "ListBackupOperationsRequest",
                              "responseType": "ListBackupOperationsResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/instances/*}/backupOperations",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/instances/*}/backupOperations"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "ListDatabaseRoles": {
                              "requestType": "ListDatabaseRolesRequest",
                              "responseType": "ListDatabaseRolesResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/instances/*/databases/*}/databaseRoles",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/instances/*/databases/*}/databaseRoles"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            }
                          }
                        },
                        "RestoreInfo": {
                          "oneofs": {
                            "sourceInfo": {
                              "oneof": [
                                "backupInfo"
                              ]
                            }
                          },
                          "fields": {
                            "sourceType": {
                              "type": "RestoreSourceType",
                              "id": 1
                            },
                            "backupInfo": {
                              "type": "BackupInfo",
                              "id": 2
                            }
                          }
                        },
                        "Database": {
                          "options": {
                            "(google.api.resource).type": "spanner.googleapis.com/Database",
                            "(google.api.resource).pattern": "projects/{project}/instances/{instance}/databases/{database}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "state": {
                              "type": "State",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "restoreInfo": {
                              "type": "RestoreInfo",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "encryptionConfig": {
                              "type": "EncryptionConfig",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "encryptionInfo": {
                              "rule": "repeated",
                              "type": "EncryptionInfo",
                              "id": 8,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "versionRetentionPeriod": {
                              "type": "string",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "earliestVersionTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 7,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "defaultLeader": {
                              "type": "string",
                              "id": 9,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "databaseDialect": {
                              "type": "DatabaseDialect",
                              "id": 10,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "CREATING": 1,
                                "READY": 2,
                                "READY_OPTIMIZING": 3
                              }
                            }
                          }
                        },
                        "ListDatabasesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListDatabasesResponse": {
                          "fields": {
                            "databases": {
                              "rule": "repeated",
                              "type": "Database",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "CreateDatabaseRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "createStatement": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "extraStatements": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "encryptionConfig": {
                              "type": "EncryptionConfig",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "databaseDialect": {
                              "type": "DatabaseDialect",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "CreateDatabaseMetadata": {
                          "fields": {
                            "database": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            }
                          }
                        },
                        "GetDatabaseRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            }
                          }
                        },
                        "UpdateDatabaseDdlRequest": {
                          "fields": {
                            "database": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            },
                            "statements": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "operationId": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "UpdateDatabaseDdlMetadata": {
                          "fields": {
                            "database": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            },
                            "statements": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            },
                            "commitTimestamps": {
                              "rule": "repeated",
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            },
                            "throttled": {
                              "type": "bool",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "progress": {
                              "rule": "repeated",
                              "type": "OperationProgress",
                              "id": 5
                            }
                          }
                        },
                        "DropDatabaseRequest": {
                          "fields": {
                            "database": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            }
                          }
                        },
                        "GetDatabaseDdlRequest": {
                          "fields": {
                            "database": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            }
                          }
                        },
                        "GetDatabaseDdlResponse": {
                          "fields": {
                            "statements": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "ListDatabaseOperationsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "filter": {
                              "type": "string",
                              "id": 2
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListDatabaseOperationsResponse": {
                          "fields": {
                            "operations": {
                              "rule": "repeated",
                              "type": "google.longrunning.Operation",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "RestoreDatabaseRequest": {
                          "oneofs": {
                            "source": {
                              "oneof": [
                                "backup"
                              ]
                            }
                          },
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "databaseId": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "backup": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            },
                            "encryptionConfig": {
                              "type": "RestoreDatabaseEncryptionConfig",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "RestoreDatabaseEncryptionConfig": {
                          "fields": {
                            "encryptionType": {
                              "type": "EncryptionType",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "kmsKeyName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                              }
                            }
                          },
                          "nested": {
                            "EncryptionType": {
                              "values": {
                                "ENCRYPTION_TYPE_UNSPECIFIED": 0,
                                "USE_CONFIG_DEFAULT_OR_BACKUP_ENCRYPTION": 1,
                                "GOOGLE_DEFAULT_ENCRYPTION": 2,
                                "CUSTOMER_MANAGED_ENCRYPTION": 3
                              }
                            }
                          }
                        },
                        "RestoreDatabaseMetadata": {
                          "oneofs": {
                            "sourceInfo": {
                              "oneof": [
                                "backupInfo"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            },
                            "sourceType": {
                              "type": "RestoreSourceType",
                              "id": 2
                            },
                            "backupInfo": {
                              "type": "BackupInfo",
                              "id": 3
                            },
                            "progress": {
                              "type": "OperationProgress",
                              "id": 4
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 5
                            },
                            "optimizeDatabaseOperationName": {
                              "type": "string",
                              "id": 6
                            }
                          }
                        },
                        "OptimizeRestoredDatabaseMetadata": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            },
                            "progress": {
                              "type": "OperationProgress",
                              "id": 2
                            }
                          }
                        },
                        "RestoreSourceType": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "BACKUP": 1
                          }
                        },
                        "DatabaseRole": {
                          "options": {
                            "(google.api.resource).type": "spanner.googleapis.com/DatabaseRole",
                            "(google.api.resource).pattern": "projects/{project}/instances/{instance}/databases/{database}/databaseRoles/{role}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "ListDatabaseRolesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListDatabaseRolesResponse": {
                          "fields": {
                            "databaseRoles": {
                              "rule": "repeated",
                              "type": "DatabaseRole",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "instance": {
                  "nested": {
                    "v1": {
                      "options": {
                        "csharp_namespace": "Google.Cloud.Spanner.Admin.Instance.V1",
                        "go_package": "google.golang.org/genproto/googleapis/spanner/admin/instance/v1;instance",
                        "java_multiple_files": true,
                        "java_outer_classname": "SpannerInstanceAdminProto",
                        "java_package": "com.google.spanner.admin.instance.v1",
                        "php_namespace": "Google\\Cloud\\Spanner\\Admin\\Instance\\V1",
                        "ruby_package": "Google::Cloud::Spanner::Admin::Instance::V1"
                      },
                      "nested": {
                        "OperationProgress": {
                          "fields": {
                            "progressPercent": {
                              "type": "int32",
                              "id": 1
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          }
                        },
                        "InstanceAdmin": {
                          "options": {
                            "(google.api.default_host)": "spanner.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/spanner.admin"
                          },
                          "methods": {
                            "ListInstanceConfigs": {
                              "requestType": "ListInstanceConfigsRequest",
                              "responseType": "ListInstanceConfigsResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*}/instanceConfigs",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*}/instanceConfigs"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetInstanceConfig": {
                              "requestType": "GetInstanceConfigRequest",
                              "responseType": "InstanceConfig",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/instanceConfigs/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/instanceConfigs/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateInstanceConfig": {
                              "requestType": "CreateInstanceConfigRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v1/{parent=projects/*}/instanceConfigs",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "parent,instance_config,instance_config_id",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.instance.v1.InstanceConfig",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.instance.v1.CreateInstanceConfigMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{parent=projects/*}/instanceConfigs",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,instance_config,instance_config_id"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.instance.v1.InstanceConfig",
                                    "metadata_type": "google.spanner.admin.instance.v1.CreateInstanceConfigMetadata"
                                  }
                                }
                              ]
                            },
                            "UpdateInstanceConfig": {
                              "requestType": "UpdateInstanceConfigRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).patch": "/v1/{instance_config.name=projects/*/instanceConfigs/*}",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "instance_config,update_mask",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.instance.v1.InstanceConfig",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v1/{instance_config.name=projects/*/instanceConfigs/*}",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "instance_config,update_mask"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.instance.v1.InstanceConfig",
                                    "metadata_type": "google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata"
                                  }
                                }
                              ]
                            },
                            "DeleteInstanceConfig": {
                              "requestType": "DeleteInstanceConfigRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v1/{name=projects/*/instanceConfigs/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v1/{name=projects/*/instanceConfigs/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ListInstanceConfigOperations": {
                              "requestType": "ListInstanceConfigOperationsRequest",
                              "responseType": "ListInstanceConfigOperationsResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*}/instanceConfigOperations",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*}/instanceConfigOperations"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "ListInstances": {
                              "requestType": "ListInstancesRequest",
                              "responseType": "ListInstancesResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*}/instances",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*}/instances"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetInstance": {
                              "requestType": "GetInstanceRequest",
                              "responseType": "Instance",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/instances/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/instances/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateInstance": {
                              "requestType": "CreateInstanceRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v1/{parent=projects/*}/instances",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "parent,instance_id,instance",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.instance.v1.Instance",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.instance.v1.CreateInstanceMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{parent=projects/*}/instances",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,instance_id,instance"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.instance.v1.Instance",
                                    "metadata_type": "google.spanner.admin.instance.v1.CreateInstanceMetadata"
                                  }
                                }
                              ]
                            },
                            "UpdateInstance": {
                              "requestType": "UpdateInstanceRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).patch": "/v1/{instance.name=projects/*/instances/*}",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "instance,field_mask",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.instance.v1.Instance",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.instance.v1.UpdateInstanceMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v1/{instance.name=projects/*/instances/*}",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "instance,field_mask"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.instance.v1.Instance",
                                    "metadata_type": "google.spanner.admin.instance.v1.UpdateInstanceMetadata"
                                  }
                                }
                              ]
                            },
                            "DeleteInstance": {
                              "requestType": "DeleteInstanceRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v1/{name=projects/*/instances/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v1/{name=projects/*/instances/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "SetIamPolicy": {
                              "requestType": "google.iam.v1.SetIamPolicyRequest",
                              "responseType": "google.iam.v1.Policy",
                              "options": {
                                "(google.api.http).post": "/v1/{resource=projects/*/instances/*}:setIamPolicy",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "resource,policy"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{resource=projects/*/instances/*}:setIamPolicy",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "resource,policy"
                                }
                              ]
                            },
                            "GetIamPolicy": {
                              "requestType": "google.iam.v1.GetIamPolicyRequest",
                              "responseType": "google.iam.v1.Policy",
                              "options": {
                                "(google.api.http).post": "/v1/{resource=projects/*/instances/*}:getIamPolicy",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "resource"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{resource=projects/*/instances/*}:getIamPolicy",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "resource"
                                }
                              ]
                            },
                            "TestIamPermissions": {
                              "requestType": "google.iam.v1.TestIamPermissionsRequest",
                              "responseType": "google.iam.v1.TestIamPermissionsResponse",
                              "options": {
                                "(google.api.http).post": "/v1/{resource=projects/*/instances/*}:testIamPermissions",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "resource,permissions"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{resource=projects/*/instances/*}:testIamPermissions",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "resource,permissions"
                                }
                              ]
                            }
                          }
                        },
                        "ReplicaInfo": {
                          "fields": {
                            "location": {
                              "type": "string",
                              "id": 1
                            },
                            "type": {
                              "type": "ReplicaType",
                              "id": 2
                            },
                            "defaultLeaderLocation": {
                              "type": "bool",
                              "id": 3
                            }
                          },
                          "nested": {
                            "ReplicaType": {
                              "values": {
                                "TYPE_UNSPECIFIED": 0,
                                "READ_WRITE": 1,
                                "READ_ONLY": 2,
                                "WITNESS": 3
                              }
                            }
                          }
                        },
                        "InstanceConfig": {
                          "options": {
                            "(google.api.resource).type": "spanner.googleapis.com/InstanceConfig",
                            "(google.api.resource).pattern": "projects/{project}/instanceConfigs/{instance_config}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2
                            },
                            "configType": {
                              "type": "Type",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "replicas": {
                              "rule": "repeated",
                              "type": "ReplicaInfo",
                              "id": 3
                            },
                            "optionalReplicas": {
                              "rule": "repeated",
                              "type": "ReplicaInfo",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "baseConfig": {
                              "type": "string",
                              "id": 7,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/InstanceConfig"
                              }
                            },
                            "labels": {
                              "keyType": "string",
                              "type": "string",
                              "id": 8
                            },
                            "etag": {
                              "type": "string",
                              "id": 9
                            },
                            "leaderOptions": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 4
                            },
                            "reconciling": {
                              "type": "bool",
                              "id": 10,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "state": {
                              "type": "State",
                              "id": 11,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "Type": {
                              "values": {
                                "TYPE_UNSPECIFIED": 0,
                                "GOOGLE_MANAGED": 1,
                                "USER_MANAGED": 2
                              }
                            },
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "CREATING": 1,
                                "READY": 2
                              }
                            }
                          }
                        },
                        "Instance": {
                          "options": {
                            "(google.api.resource).type": "spanner.googleapis.com/Instance",
                            "(google.api.resource).pattern": "projects/{project}/instances/{instance}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "config": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/InstanceConfig"
                              }
                            },
                            "displayName": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "nodeCount": {
                              "type": "int32",
                              "id": 5
                            },
                            "processingUnits": {
                              "type": "int32",
                              "id": 9
                            },
                            "state": {
                              "type": "State",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "labels": {
                              "keyType": "string",
                              "type": "string",
                              "id": 7
                            },
                            "endpointUris": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 8
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 11,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "updateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 12,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "CREATING": 1,
                                "READY": 2
                              }
                            }
                          }
                        },
                        "ListInstanceConfigsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "cloudresourcemanager.googleapis.com/Project"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListInstanceConfigsResponse": {
                          "fields": {
                            "instanceConfigs": {
                              "rule": "repeated",
                              "type": "InstanceConfig",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetInstanceConfigRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/InstanceConfig"
                              }
                            }
                          }
                        },
                        "CreateInstanceConfigRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "cloudresourcemanager.googleapis.com/Project"
                              }
                            },
                            "instanceConfigId": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "instanceConfig": {
                              "type": "InstanceConfig",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "validateOnly": {
                              "type": "bool",
                              "id": 4
                            }
                          }
                        },
                        "UpdateInstanceConfigRequest": {
                          "fields": {
                            "instanceConfig": {
                              "type": "InstanceConfig",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "validateOnly": {
                              "type": "bool",
                              "id": 3
                            }
                          }
                        },
                        "DeleteInstanceConfigRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/InstanceConfig"
                              }
                            },
                            "etag": {
                              "type": "string",
                              "id": 2
                            },
                            "validateOnly": {
                              "type": "bool",
                              "id": 3
                            }
                          }
                        },
                        "ListInstanceConfigOperationsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "cloudresourcemanager.googleapis.com/Project"
                              }
                            },
                            "filter": {
                              "type": "string",
                              "id": 2
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListInstanceConfigOperationsResponse": {
                          "fields": {
                            "operations": {
                              "rule": "repeated",
                              "type": "google.longrunning.Operation",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetInstanceRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "fieldMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2
                            }
                          }
                        },
                        "CreateInstanceRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "cloudresourcemanager.googleapis.com/Project"
                              }
                            },
                            "instanceId": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "instance": {
                              "type": "Instance",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "ListInstancesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "cloudresourcemanager.googleapis.com/Project"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            },
                            "filter": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListInstancesResponse": {
                          "fields": {
                            "instances": {
                              "rule": "repeated",
                              "type": "Instance",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "UpdateInstanceRequest": {
                          "fields": {
                            "instance": {
                              "type": "Instance",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "fieldMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "DeleteInstanceRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            }
                          }
                        },
                        "CreateInstanceMetadata": {
                          "fields": {
                            "instance": {
                              "type": "Instance",
                              "id": 1
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            }
                          }
                        },
                        "UpdateInstanceMetadata": {
                          "fields": {
                            "instance": {
                              "type": "Instance",
                              "id": 1
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            }
                          }
                        },
                        "CreateInstanceConfigMetadata": {
                          "fields": {
                            "instanceConfig": {
                              "type": "InstanceConfig",
                              "id": 1
                            },
                            "progress": {
                              "type": "OperationProgress",
                              "id": 2
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          }
                        },
                        "UpdateInstanceConfigMetadata": {
                          "fields": {
                            "instanceConfig": {
                              "type": "InstanceConfig",
                              "id": 1
                            },
                            "progress": {
                              "type": "OperationProgress",
                              "id": 2
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "v1": {
              "options": {
                "csharp_namespace": "Google.Cloud.Spanner.V1",
                "go_package": "google.golang.org/genproto/googleapis/spanner/v1;spanner",
                "java_multiple_files": true,
                "java_outer_classname": "SpannerProto",
                "java_package": "com.google.spanner.v1",
                "php_namespace": "Google\\Cloud\\Spanner\\V1",
                "ruby_package": "Google::Cloud::Spanner::V1",
                "cc_enable_arenas": true,
                "(google.api.resource_definition).type": "spanner.googleapis.com/Database",
                "(google.api.resource_definition).pattern": "projects/{project}/instances/{instance}/databases/{database}"
              },
              "nested": {
                "CommitResponse": {
                  "fields": {
                    "commitTimestamp": {
                      "type": "google.protobuf.Timestamp",
                      "id": 1
                    },
                    "commitStats": {
                      "type": "CommitStats",
                      "id": 2
                    }
                  },
                  "nested": {
                    "CommitStats": {
                      "fields": {
                        "mutationCount": {
                          "type": "int64",
                          "id": 1
                        }
                      }
                    }
                  }
                },
                "KeyRange": {
                  "oneofs": {
                    "startKeyType": {
                      "oneof": [
                        "startClosed",
                        "startOpen"
                      ]
                    },
                    "endKeyType": {
                      "oneof": [
                        "endClosed",
                        "endOpen"
                      ]
                    }
                  },
                  "fields": {
                    "startClosed": {
                      "type": "google.protobuf.ListValue",
                      "id": 1
                    },
                    "startOpen": {
                      "type": "google.protobuf.ListValue",
                      "id": 2
                    },
                    "endClosed": {
                      "type": "google.protobuf.ListValue",
                      "id": 3
                    },
                    "endOpen": {
                      "type": "google.protobuf.ListValue",
                      "id": 4
                    }
                  }
                },
                "KeySet": {
                  "fields": {
                    "keys": {
                      "rule": "repeated",
                      "type": "google.protobuf.ListValue",
                      "id": 1
                    },
                    "ranges": {
                      "rule": "repeated",
                      "type": "KeyRange",
                      "id": 2
                    },
                    "all": {
                      "type": "bool",
                      "id": 3
                    }
                  }
                },
                "Mutation": {
                  "oneofs": {
                    "operation": {
                      "oneof": [
                        "insert",
                        "update",
                        "insertOrUpdate",
                        "replace",
                        "delete"
                      ]
                    }
                  },
                  "fields": {
                    "insert": {
                      "type": "Write",
                      "id": 1
                    },
                    "update": {
                      "type": "Write",
                      "id": 2
                    },
                    "insertOrUpdate": {
                      "type": "Write",
                      "id": 3
                    },
                    "replace": {
                      "type": "Write",
                      "id": 4
                    },
                    "delete": {
                      "type": "Delete",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Write": {
                      "fields": {
                        "table": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "columns": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "values": {
                          "rule": "repeated",
                          "type": "google.protobuf.ListValue",
                          "id": 3
                        }
                      }
                    },
                    "Delete": {
                      "fields": {
                        "table": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "keySet": {
                          "type": "KeySet",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    }
                  }
                },
                "PlanNode": {
                  "fields": {
                    "index": {
                      "type": "int32",
                      "id": 1
                    },
                    "kind": {
                      "type": "Kind",
                      "id": 2
                    },
                    "displayName": {
                      "type": "string",
                      "id": 3
                    },
                    "childLinks": {
                      "rule": "repeated",
                      "type": "ChildLink",
                      "id": 4
                    },
                    "shortRepresentation": {
                      "type": "ShortRepresentation",
                      "id": 5
                    },
                    "metadata": {
                      "type": "google.protobuf.Struct",
                      "id": 6
                    },
                    "executionStats": {
                      "type": "google.protobuf.Struct",
                      "id": 7
                    }
                  },
                  "nested": {
                    "Kind": {
                      "values": {
                        "KIND_UNSPECIFIED": 0,
                        "RELATIONAL": 1,
                        "SCALAR": 2
                      }
                    },
                    "ChildLink": {
                      "fields": {
                        "childIndex": {
                          "type": "int32",
                          "id": 1
                        },
                        "type": {
                          "type": "string",
                          "id": 2
                        },
                        "variable": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ShortRepresentation": {
                      "fields": {
                        "description": {
                          "type": "string",
                          "id": 1
                        },
                        "subqueries": {
                          "keyType": "string",
                          "type": "int32",
                          "id": 2
                        }
                      }
                    }
                  }
                },
                "QueryPlan": {
                  "fields": {
                    "planNodes": {
                      "rule": "repeated",
                      "type": "PlanNode",
                      "id": 1
                    }
                  }
                },
                "ResultSet": {
                  "fields": {
                    "metadata": {
                      "type": "ResultSetMetadata",
                      "id": 1
                    },
                    "rows": {
                      "rule": "repeated",
                      "type": "google.protobuf.ListValue",
                      "id": 2
                    },
                    "stats": {
                      "type": "ResultSetStats",
                      "id": 3
                    }
                  }
                },
                "PartialResultSet": {
                  "fields": {
                    "metadata": {
                      "type": "ResultSetMetadata",
                      "id": 1
                    },
                    "values": {
                      "rule": "repeated",
                      "type": "google.protobuf.Value",
                      "id": 2
                    },
                    "chunkedValue": {
                      "type": "bool",
                      "id": 3
                    },
                    "resumeToken": {
                      "type": "bytes",
                      "id": 4
                    },
                    "stats": {
                      "type": "ResultSetStats",
                      "id": 5
                    }
                  }
                },
                "ResultSetMetadata": {
                  "fields": {
                    "rowType": {
                      "type": "StructType",
                      "id": 1
                    },
                    "transaction": {
                      "type": "Transaction",
                      "id": 2
                    },
                    "undeclaredParameters": {
                      "type": "StructType",
                      "id": 3
                    }
                  }
                },
                "ResultSetStats": {
                  "oneofs": {
                    "rowCount": {
                      "oneof": [
                        "rowCountExact",
                        "rowCountLowerBound"
                      ]
                    }
                  },
                  "fields": {
                    "queryPlan": {
                      "type": "QueryPlan",
                      "id": 1
                    },
                    "queryStats": {
                      "type": "google.protobuf.Struct",
                      "id": 2
                    },
                    "rowCountExact": {
                      "type": "int64",
                      "id": 3
                    },
                    "rowCountLowerBound": {
                      "type": "int64",
                      "id": 4
                    }
                  }
                },
                "TransactionOptions": {
                  "oneofs": {
                    "mode": {
                      "oneof": [
                        "readWrite",
                        "partitionedDml",
                        "readOnly"
                      ]
                    }
                  },
                  "fields": {
                    "readWrite": {
                      "type": "ReadWrite",
                      "id": 1
                    },
                    "partitionedDml": {
                      "type": "PartitionedDml",
                      "id": 3
                    },
                    "readOnly": {
                      "type": "ReadOnly",
                      "id": 2
                    }
                  },
                  "nested": {
                    "ReadWrite": {
                      "fields": {
                        "readLockMode": {
                          "type": "ReadLockMode",
                          "id": 1
                        }
                      },
                      "nested": {
                        "ReadLockMode": {
                          "values": {
                            "READ_LOCK_MODE_UNSPECIFIED": 0,
                            "PESSIMISTIC": 1,
                            "OPTIMISTIC": 2
                          }
                        }
                      }
                    },
                    "PartitionedDml": {
                      "fields": {}
                    },
                    "ReadOnly": {
                      "oneofs": {
                        "timestampBound": {
                          "oneof": [
                            "strong",
                            "minReadTimestamp",
                            "maxStaleness",
                            "readTimestamp",
                            "exactStaleness"
                          ]
                        }
                      },
                      "fields": {
                        "strong": {
                          "type": "bool",
                          "id": 1
                        },
                        "minReadTimestamp": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "maxStaleness": {
                          "type": "google.protobuf.Duration",
                          "id": 3
                        },
                        "readTimestamp": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4
                        },
                        "exactStaleness": {
                          "type": "google.protobuf.Duration",
                          "id": 5
                        },
                        "returnReadTimestamp": {
                          "type": "bool",
                          "id": 6
                        }
                      }
                    }
                  }
                },
                "Transaction": {
                  "fields": {
                    "id": {
                      "type": "bytes",
                      "id": 1
                    },
                    "readTimestamp": {
                      "type": "google.protobuf.Timestamp",
                      "id": 2
                    }
                  }
                },
                "TransactionSelector": {
                  "oneofs": {
                    "selector": {
                      "oneof": [
                        "singleUse",
                        "id",
                        "begin"
                      ]
                    }
                  },
                  "fields": {
                    "singleUse": {
                      "type": "TransactionOptions",
                      "id": 1
                    },
                    "id": {
                      "type": "bytes",
                      "id": 2
                    },
                    "begin": {
                      "type": "TransactionOptions",
                      "id": 3
                    }
                  }
                },
                "Type": {
                  "fields": {
                    "code": {
                      "type": "TypeCode",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "arrayElementType": {
                      "type": "Type",
                      "id": 2
                    },
                    "structType": {
                      "type": "StructType",
                      "id": 3
                    },
                    "typeAnnotation": {
                      "type": "TypeAnnotationCode",
                      "id": 4
                    }
                  }
                },
                "StructType": {
                  "fields": {
                    "fields": {
                      "rule": "repeated",
                      "type": "Field",
                      "id": 1
                    }
                  },
                  "nested": {
                    "Field": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "type": {
                          "type": "Type",
                          "id": 2
                        }
                      }
                    }
                  }
                },
                "TypeCode": {
                  "values": {
                    "TYPE_CODE_UNSPECIFIED": 0,
                    "BOOL": 1,
                    "INT64": 2,
                    "FLOAT64": 3,
                    "TIMESTAMP": 4,
                    "DATE": 5,
                    "STRING": 6,
                    "BYTES": 7,
                    "ARRAY": 8,
                    "STRUCT": 9,
                    "NUMERIC": 10,
                    "JSON": 11
                  }
                },
                "TypeAnnotationCode": {
                  "values": {
                    "TYPE_ANNOTATION_CODE_UNSPECIFIED": 0,
                    "PG_NUMERIC": 2,
                    "PG_JSONB": 3
                  }
                },
                "Spanner": {
                  "options": {
                    "(google.api.default_host)": "spanner.googleapis.com",
                    "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/spanner.data"
                  },
                  "methods": {
                    "CreateSession": {
                      "requestType": "CreateSessionRequest",
                      "responseType": "Session",
                      "options": {
                        "(google.api.http).post": "/v1/{database=projects/*/instances/*/databases/*}/sessions",
                        "(google.api.http).body": "*",
                        "(google.api.method_signature)": "database"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{database=projects/*/instances/*/databases/*}/sessions",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.method_signature)": "database"
                        }
                      ]
                    },
                    "BatchCreateSessions": {
                      "requestType": "BatchCreateSessionsRequest",
                      "responseType": "BatchCreateSessionsResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{database=projects/*/instances/*/databases/*}/sessions:batchCreate",
                        "(google.api.http).body": "*",
                        "(google.api.method_signature)": "database,session_count"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{database=projects/*/instances/*/databases/*}/sessions:batchCreate",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.method_signature)": "database,session_count"
                        }
                      ]
                    },
                    "GetSession": {
                      "requestType": "GetSessionRequest",
                      "responseType": "Session",
                      "options": {
                        "(google.api.http).get": "/v1/{name=projects/*/instances/*/databases/*/sessions/*}",
                        "(google.api.method_signature)": "name"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "get": "/v1/{name=projects/*/instances/*/databases/*/sessions/*}"
                          }
                        },
                        {
                          "(google.api.method_signature)": "name"
                        }
                      ]
                    },
                    "ListSessions": {
                      "requestType": "ListSessionsRequest",
                      "responseType": "ListSessionsResponse",
                      "options": {
                        "(google.api.http).get": "/v1/{database=projects/*/instances/*/databases/*}/sessions",
                        "(google.api.method_signature)": "database"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "get": "/v1/{database=projects/*/instances/*/databases/*}/sessions"
                          }
                        },
                        {
                          "(google.api.method_signature)": "database"
                        }
                      ]
                    },
                    "DeleteSession": {
                      "requestType": "DeleteSessionRequest",
                      "responseType": "google.protobuf.Empty",
                      "options": {
                        "(google.api.http).delete": "/v1/{name=projects/*/instances/*/databases/*/sessions/*}",
                        "(google.api.method_signature)": "name"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "delete": "/v1/{name=projects/*/instances/*/databases/*/sessions/*}"
                          }
                        },
                        {
                          "(google.api.method_signature)": "name"
                        }
                      ]
                    },
                    "ExecuteSql": {
                      "requestType": "ExecuteSqlRequest",
                      "responseType": "ResultSet",
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:executeSql",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:executeSql",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "ExecuteStreamingSql": {
                      "requestType": "ExecuteSqlRequest",
                      "responseType": "PartialResultSet",
                      "responseStream": true,
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:executeStreamingSql",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:executeStreamingSql",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "ExecuteBatchDml": {
                      "requestType": "ExecuteBatchDmlRequest",
                      "responseType": "ExecuteBatchDmlResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:executeBatchDml",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:executeBatchDml",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "Read": {
                      "requestType": "ReadRequest",
                      "responseType": "ResultSet",
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:read",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:read",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "StreamingRead": {
                      "requestType": "ReadRequest",
                      "responseType": "PartialResultSet",
                      "responseStream": true,
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:streamingRead",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:streamingRead",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "BeginTransaction": {
                      "requestType": "BeginTransactionRequest",
                      "responseType": "Transaction",
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:beginTransaction",
                        "(google.api.http).body": "*",
                        "(google.api.method_signature)": "session,options"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:beginTransaction",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.method_signature)": "session,options"
                        }
                      ]
                    },
                    "Commit": {
                      "requestType": "CommitRequest",
                      "responseType": "CommitResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:commit",
                        "(google.api.http).body": "*",
                        "(google.api.method_signature)": "session,single_use_transaction,mutations"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:commit",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.method_signature)": "session,transaction_id,mutations"
                        },
                        {
                          "(google.api.method_signature)": "session,single_use_transaction,mutations"
                        }
                      ]
                    },
                    "Rollback": {
                      "requestType": "RollbackRequest",
                      "responseType": "google.protobuf.Empty",
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:rollback",
                        "(google.api.http).body": "*",
                        "(google.api.method_signature)": "session,transaction_id"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:rollback",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.method_signature)": "session,transaction_id"
                        }
                      ]
                    },
                    "PartitionQuery": {
                      "requestType": "PartitionQueryRequest",
                      "responseType": "PartitionResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:partitionQuery",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:partitionQuery",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "PartitionRead": {
                      "requestType": "PartitionReadRequest",
                      "responseType": "PartitionResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:partitionRead",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:partitionRead",
                            "body": "*"
                          }
                        }
                      ]
                    }
                  }
                },
                "CreateSessionRequest": {
                  "fields": {
                    "database": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                      }
                    },
                    "session": {
                      "type": "Session",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                },
                "BatchCreateSessionsRequest": {
                  "fields": {
                    "database": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                      }
                    },
                    "sessionTemplate": {
                      "type": "Session",
                      "id": 2
                    },
                    "sessionCount": {
                      "type": "int32",
                      "id": 3,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                },
                "BatchCreateSessionsResponse": {
                  "fields": {
                    "session": {
                      "rule": "repeated",
                      "type": "Session",
                      "id": 1
                    }
                  }
                },
                "Session": {
                  "options": {
                    "(google.api.resource).type": "spanner.googleapis.com/Session",
                    "(google.api.resource).pattern": "projects/{project}/instances/{instance}/databases/{database}/sessions/{session}"
                  },
                  "fields": {
                    "name": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "OUTPUT_ONLY"
                      }
                    },
                    "labels": {
                      "keyType": "string",
                      "type": "string",
                      "id": 2
                    },
                    "createTime": {
                      "type": "google.protobuf.Timestamp",
                      "id": 3,
                      "options": {
                        "(google.api.field_behavior)": "OUTPUT_ONLY"
                      }
                    },
                    "approximateLastUseTime": {
                      "type": "google.protobuf.Timestamp",
                      "id": 4,
                      "options": {
                        "(google.api.field_behavior)": "OUTPUT_ONLY"
                      }
                    },
                    "creatorRole": {
                      "type": "string",
                      "id": 5
                    }
                  }
                },
                "GetSessionRequest": {
                  "fields": {
                    "name": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    }
                  }
                },
                "ListSessionsRequest": {
                  "fields": {
                    "database": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                      }
                    },
                    "pageSize": {
                      "type": "int32",
                      "id": 2
                    },
                    "pageToken": {
                      "type": "string",
                      "id": 3
                    },
                    "filter": {
                      "type": "string",
                      "id": 4
                    }
                  }
                },
                "ListSessionsResponse": {
                  "fields": {
                    "sessions": {
                      "rule": "repeated",
                      "type": "Session",
                      "id": 1
                    },
                    "nextPageToken": {
                      "type": "string",
                      "id": 2
                    }
                  }
                },
                "DeleteSessionRequest": {
                  "fields": {
                    "name": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    }
                  }
                },
                "RequestOptions": {
                  "fields": {
                    "priority": {
                      "type": "Priority",
                      "id": 1
                    },
                    "requestTag": {
                      "type": "string",
                      "id": 2
                    },
                    "transactionTag": {
                      "type": "string",
                      "id": 3
                    }
                  },
                  "nested": {
                    "Priority": {
                      "values": {
                        "PRIORITY_UNSPECIFIED": 0,
                        "PRIORITY_LOW": 1,
                        "PRIORITY_MEDIUM": 2,
                        "PRIORITY_HIGH": 3
                      }
                    }
                  }
                },
                "ExecuteSqlRequest": {
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "transaction": {
                      "type": "TransactionSelector",
                      "id": 2
                    },
                    "sql": {
                      "type": "string",
                      "id": 3,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "params": {
                      "type": "google.protobuf.Struct",
                      "id": 4
                    },
                    "paramTypes": {
                      "keyType": "string",
                      "type": "Type",
                      "id": 5
                    },
                    "resumeToken": {
                      "type": "bytes",
                      "id": 6
                    },
                    "queryMode": {
                      "type": "QueryMode",
                      "id": 7
                    },
                    "partitionToken": {
                      "type": "bytes",
                      "id": 8
                    },
                    "seqno": {
                      "type": "int64",
                      "id": 9
                    },
                    "queryOptions": {
                      "type": "QueryOptions",
                      "id": 10
                    },
                    "requestOptions": {
                      "type": "RequestOptions",
                      "id": 11
                    }
                  },
                  "nested": {
                    "QueryMode": {
                      "values": {
                        "NORMAL": 0,
                        "PLAN": 1,
                        "PROFILE": 2
                      }
                    },
                    "QueryOptions": {
                      "fields": {
                        "optimizerVersion": {
                          "type": "string",
                          "id": 1
                        },
                        "optimizerStatisticsPackage": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    }
                  }
                },
                "ExecuteBatchDmlRequest": {
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "transaction": {
                      "type": "TransactionSelector",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "statements": {
                      "rule": "repeated",
                      "type": "Statement",
                      "id": 3,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "seqno": {
                      "type": "int64",
                      "id": 4,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "requestOptions": {
                      "type": "RequestOptions",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Statement": {
                      "fields": {
                        "sql": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "params": {
                          "type": "google.protobuf.Struct",
                          "id": 2
                        },
                        "paramTypes": {
                          "keyType": "string",
                          "type": "Type",
                          "id": 3
                        }
                      }
                    }
                  }
                },
                "ExecuteBatchDmlResponse": {
                  "fields": {
                    "resultSets": {
                      "rule": "repeated",
                      "type": "ResultSet",
                      "id": 1
                    },
                    "status": {
                      "type": "google.rpc.Status",
                      "id": 2
                    }
                  }
                },
                "PartitionOptions": {
                  "fields": {
                    "partitionSizeBytes": {
                      "type": "int64",
                      "id": 1
                    },
                    "maxPartitions": {
                      "type": "int64",
                      "id": 2
                    }
                  }
                },
                "PartitionQueryRequest": {
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "transaction": {
                      "type": "TransactionSelector",
                      "id": 2
                    },
                    "sql": {
                      "type": "string",
                      "id": 3,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "params": {
                      "type": "google.protobuf.Struct",
                      "id": 4
                    },
                    "paramTypes": {
                      "keyType": "string",
                      "type": "Type",
                      "id": 5
                    },
                    "partitionOptions": {
                      "type": "PartitionOptions",
                      "id": 6
                    }
                  }
                },
                "PartitionReadRequest": {
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "transaction": {
                      "type": "TransactionSelector",
                      "id": 2
                    },
                    "table": {
                      "type": "string",
                      "id": 3,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "index": {
                      "type": "string",
                      "id": 4
                    },
                    "columns": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 5
                    },
                    "keySet": {
                      "type": "KeySet",
                      "id": 6,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "partitionOptions": {
                      "type": "PartitionOptions",
                      "id": 9
                    }
                  }
                },
                "Partition": {
                  "fields": {
                    "partitionToken": {
                      "type": "bytes",
                      "id": 1
                    }
                  }
                },
                "PartitionResponse": {
                  "fields": {
                    "partitions": {
                      "rule": "repeated",
                      "type": "Partition",
                      "id": 1
                    },
                    "transaction": {
                      "type": "Transaction",
                      "id": 2
                    }
                  }
                },
                "ReadRequest": {
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "transaction": {
                      "type": "TransactionSelector",
                      "id": 2
                    },
                    "table": {
                      "type": "string",
                      "id": 3,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "index": {
                      "type": "string",
                      "id": 4
                    },
                    "columns": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 5,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "keySet": {
                      "type": "KeySet",
                      "id": 6,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "limit": {
                      "type": "int64",
                      "id": 8
                    },
                    "resumeToken": {
                      "type": "bytes",
                      "id": 9
                    },
                    "partitionToken": {
                      "type": "bytes",
                      "id": 10
                    },
                    "requestOptions": {
                      "type": "RequestOptions",
                      "id": 11
                    }
                  }
                },
                "BeginTransactionRequest": {
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "options": {
                      "type": "TransactionOptions",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "requestOptions": {
                      "type": "RequestOptions",
                      "id": 3
                    }
                  }
                },
                "CommitRequest": {
                  "oneofs": {
                    "transaction": {
                      "oneof": [
                        "transactionId",
                        "singleUseTransaction"
                      ]
                    }
                  },
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "transactionId": {
                      "type": "bytes",
                      "id": 2
                    },
                    "singleUseTransaction": {
                      "type": "TransactionOptions",
                      "id": 3
                    },
                    "mutations": {
                      "rule": "repeated",
                      "type": "Mutation",
                      "id": 4
                    },
                    "returnCommitStats": {
                      "type": "bool",
                      "id": 5
                    },
                    "requestOptions": {
                      "type": "RequestOptions",
                      "id": 6
                    }
                  }
                },
                "RollbackRequest": {
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "transactionId": {
                      "type": "bytes",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "ClientProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "google.golang.org/genproto/googleapis/longrunning;longrunning",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name,filter"
                    }
                  ]
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "delete": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "post": "/v1/{name=operations/**}:cancel",
                        "body": "*"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "iam": {
          "nested": {
            "v1": {
              "options": {
                "cc_enable_arenas": true,
                "csharp_namespace": "Google.Cloud.Iam.V1",
                "go_package": "google.golang.org/genproto/googleapis/iam/v1;iam",
                "java_multiple_files": true,
                "java_outer_classname": "PolicyProto",
                "java_package": "com.google.iam.v1",
                "php_namespace": "Google\\Cloud\\Iam\\V1"
              },
              "nested": {
                "IAMPolicy": {
                  "options": {
                    "(google.api.default_host)": "iam-meta-api.googleapis.com"
                  },
                  "methods": {
                    "SetIamPolicy": {
                      "requestType": "SetIamPolicyRequest",
                      "responseType": "Policy",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:setIamPolicy",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:setIamPolicy",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "GetIamPolicy": {
                      "requestType": "GetIamPolicyRequest",
                      "responseType": "Policy",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:getIamPolicy",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:getIamPolicy",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "TestIamPermissions": {
                      "requestType": "TestIamPermissionsRequest",
                      "responseType": "TestIamPermissionsResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:testIamPermissions",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:testIamPermissions",
                            "body": "*"
                          }
                        }
                      ]
                    }
                  }
                },
                "SetIamPolicyRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "policy": {
                      "type": "Policy",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "updateMask": {
                      "type": "google.protobuf.FieldMask",
                      "id": 3
                    }
                  }
                },
                "GetIamPolicyRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "options": {
                      "type": "GetPolicyOptions",
                      "id": 2
                    }
                  }
                },
                "TestIamPermissionsRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "permissions": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                },
                "TestIamPermissionsResponse": {
                  "fields": {
                    "permissions": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 1
                    }
                  }
                },
                "GetPolicyOptions": {
                  "fields": {
                    "requestedPolicyVersion": {
                      "type": "int32",
                      "id": 1
                    }
                  }
                },
                "Policy": {
                  "fields": {
                    "version": {
                      "type": "int32",
                      "id": 1
                    },
                    "bindings": {
                      "rule": "repeated",
                      "type": "Binding",
                      "id": 4
                    },
                    "auditConfigs": {
                      "rule": "repeated",
                      "type": "AuditConfig",
                      "id": 6
                    },
                    "etag": {
                      "type": "bytes",
                      "id": 3
                    }
                  }
                },
                "Binding": {
                  "fields": {
                    "role": {
                      "type": "string",
                      "id": 1
                    },
                    "members": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2
                    },
                    "condition": {
                      "type": "google.type.Expr",
                      "id": 3
                    }
                  }
                },
                "AuditConfig": {
                  "fields": {
                    "service": {
                      "type": "string",
                      "id": 1
                    },
                    "auditLogConfigs": {
                      "rule": "repeated",
                      "type": "AuditLogConfig",
                      "id": 3
                    }
                  }
                },
                "AuditLogConfig": {
                  "fields": {
                    "logType": {
                      "type": "LogType",
                      "id": 1
                    },
                    "exemptedMembers": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2
                    }
                  },
                  "nested": {
                    "LogType": {
                      "values": {
                        "LOG_TYPE_UNSPECIFIED": 0,
                        "ADMIN_READ": 1,
                        "DATA_WRITE": 2,
                        "DATA_READ": 3
                      }
                    }
                  }
                },
                "PolicyDelta": {
                  "fields": {
                    "bindingDeltas": {
                      "rule": "repeated",
                      "type": "BindingDelta",
                      "id": 1
                    },
                    "auditConfigDeltas": {
                      "rule": "repeated",
                      "type": "AuditConfigDelta",
                      "id": 2
                    }
                  }
                },
                "BindingDelta": {
                  "fields": {
                    "action": {
                      "type": "Action",
                      "id": 1
                    },
                    "role": {
                      "type": "string",
                      "id": 2
                    },
                    "member": {
                      "type": "string",
                      "id": 3
                    },
                    "condition": {
                      "type": "google.type.Expr",
                      "id": 4
                    }
                  },
                  "nested": {
                    "Action": {
                      "values": {
                        "ACTION_UNSPECIFIED": 0,
                        "ADD": 1,
                        "REMOVE": 2
                      }
                    }
                  }
                },
                "AuditConfigDelta": {
                  "fields": {
                    "action": {
                      "type": "Action",
                      "id": 1
                    },
                    "service": {
                      "type": "string",
                      "id": 2
                    },
                    "exemptedMember": {
                      "type": "string",
                      "id": 3
                    },
                    "logType": {
                      "type": "string",
                      "id": 4
                    }
                  },
                  "nested": {
                    "Action": {
                      "values": {
                        "ACTION_UNSPECIFIED": 0,
                        "ADD": 1,
                        "REMOVE": 2
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "type": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/type/expr;expr",
            "java_multiple_files": true,
            "java_outer_classname": "ExprProto",
            "java_package": "com.google.type",
            "objc_class_prefix": "GTP"
          },
          "nested": {
            "Expr": {
              "fields": {
                "expression": {
                  "type": "string",
                  "id": 1
                },
                "title": {
                  "type": "string",
                  "id": 2
                },
                "description": {
                  "type": "string",
                  "id": 3
                },
                "location": {
                  "type": "string",
                  "id": 4
                }
              }
            }
          }
        }
      }
    }
  }
}