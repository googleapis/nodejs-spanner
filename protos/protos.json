{
  "nested": {
    "google": {
      "nested": {
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "Edition": {
              "values": {
                "EDITION_UNKNOWN": 0,
                "EDITION_PROTO2": 998,
                "EDITION_PROTO3": 999,
                "EDITION_2023": 1000,
                "EDITION_2024": 1001,
                "EDITION_1_TEST_ONLY": 1,
                "EDITION_2_TEST_ONLY": 2,
                "EDITION_99997_TEST_ONLY": 99997,
                "EDITION_99998_TEST_ONLY": 99998,
                "EDITION_99999_TEST_ONLY": 99999,
                "EDITION_MAX": 2147483647
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "Edition",
                  "id": 14
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                },
                "declaration": {
                  "rule": "repeated",
                  "type": "Declaration",
                  "id": 2,
                  "options": {
                    "retention": "RETENTION_SOURCE"
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 50
                },
                "verification": {
                  "type": "VerificationState",
                  "id": 3,
                  "options": {
                    "default": "UNVERIFIED",
                    "retention": "RETENTION_SOURCE"
                  }
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "Declaration": {
                  "fields": {
                    "number": {
                      "type": "int32",
                      "id": 1
                    },
                    "fullName": {
                      "type": "string",
                      "id": 2
                    },
                    "type": {
                      "type": "string",
                      "id": 3
                    },
                    "reserved": {
                      "type": "bool",
                      "id": 5
                    },
                    "repeated": {
                      "type": "bool",
                      "id": 6
                    }
                  },
                  "reserved": [
                    [
                      4,
                      4
                    ]
                  ]
                },
                "VerificationState": {
                  "values": {
                    "DECLARATION": 0,
                    "UNVERIFIED": 1
                  }
                }
              }
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REPEATED": 3,
                    "LABEL_REQUIRED": 2
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 50
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  42,
                  42
                ],
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 11,
                  "options": {
                    "deprecated": true
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 12
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "retention": {
                  "type": "OptionRetention",
                  "id": 17
                },
                "targets": {
                  "rule": "repeated",
                  "type": "OptionTargetType",
                  "id": 19,
                  "options": {
                    "packed": false
                  }
                },
                "editionDefaults": {
                  "rule": "repeated",
                  "type": "EditionDefault",
                  "id": 20
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 21
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  18,
                  18
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                },
                "OptionRetention": {
                  "values": {
                    "RETENTION_UNKNOWN": 0,
                    "RETENTION_RUNTIME": 1,
                    "RETENTION_SOURCE": 2
                  }
                },
                "OptionTargetType": {
                  "values": {
                    "TARGET_TYPE_UNKNOWN": 0,
                    "TARGET_TYPE_FILE": 1,
                    "TARGET_TYPE_EXTENSION_RANGE": 2,
                    "TARGET_TYPE_MESSAGE": 3,
                    "TARGET_TYPE_FIELD": 4,
                    "TARGET_TYPE_ONEOF": 5,
                    "TARGET_TYPE_ENUM": 6,
                    "TARGET_TYPE_ENUM_ENTRY": 7,
                    "TARGET_TYPE_SERVICE": 8,
                    "TARGET_TYPE_METHOD": 9
                  }
                },
                "EditionDefault": {
                  "fields": {
                    "edition": {
                      "type": "Edition",
                      "id": 3
                    },
                    "value": {
                      "type": "string",
                      "id": 2
                    }
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "features": {
                  "type": "FeatureSet",
                  "id": 1
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "deprecated": true
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 7
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 2
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "features": {
                  "type": "FeatureSet",
                  "id": 34
                },
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 35
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "FeatureSet": {
              "fields": {
                "fieldPresence": {
                  "type": "FieldPresence",
                  "id": 1,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_2023",
                    "edition_defaults.value": "EXPLICIT"
                  }
                },
                "enumType": {
                  "type": "EnumType",
                  "id": 2,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "OPEN"
                  }
                },
                "repeatedFieldEncoding": {
                  "type": "RepeatedFieldEncoding",
                  "id": 3,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "PACKED"
                  }
                },
                "utf8Validation": {
                  "type": "Utf8Validation",
                  "id": 4,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "VERIFY"
                  }
                },
                "messageEncoding": {
                  "type": "MessageEncoding",
                  "id": 5,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO2",
                    "edition_defaults.value": "LENGTH_PREFIXED"
                  }
                },
                "jsonFormat": {
                  "type": "JsonFormat",
                  "id": 6,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "ALLOW"
                  }
                }
              },
              "extensions": [
                [
                  1000,
                  1000
                ],
                [
                  1001,
                  1001
                ],
                [
                  1002,
                  1002
                ],
                [
                  9990,
                  9990
                ],
                [
                  9995,
                  9999
                ],
                [
                  10000,
                  10000
                ]
              ],
              "reserved": [
                [
                  999,
                  999
                ]
              ],
              "nested": {
                "FieldPresence": {
                  "values": {
                    "FIELD_PRESENCE_UNKNOWN": 0,
                    "EXPLICIT": 1,
                    "IMPLICIT": 2,
                    "LEGACY_REQUIRED": 3
                  }
                },
                "EnumType": {
                  "values": {
                    "ENUM_TYPE_UNKNOWN": 0,
                    "OPEN": 1,
                    "CLOSED": 2
                  }
                },
                "RepeatedFieldEncoding": {
                  "values": {
                    "REPEATED_FIELD_ENCODING_UNKNOWN": 0,
                    "PACKED": 1,
                    "EXPANDED": 2
                  }
                },
                "Utf8Validation": {
                  "values": {
                    "UTF8_VALIDATION_UNKNOWN": 0,
                    "VERIFY": 2,
                    "NONE": 3
                  }
                },
                "MessageEncoding": {
                  "values": {
                    "MESSAGE_ENCODING_UNKNOWN": 0,
                    "LENGTH_PREFIXED": 1,
                    "DELIMITED": 2
                  }
                },
                "JsonFormat": {
                  "values": {
                    "JSON_FORMAT_UNKNOWN": 0,
                    "ALLOW": 1,
                    "LEGACY_BEST_EFFORT": 2
                  }
                }
              }
            },
            "FeatureSetDefaults": {
              "fields": {
                "defaults": {
                  "rule": "repeated",
                  "type": "FeatureSetEditionDefault",
                  "id": 1
                },
                "minimumEdition": {
                  "type": "Edition",
                  "id": 4
                },
                "maximumEdition": {
                  "type": "Edition",
                  "id": 5
                }
              },
              "nested": {
                "FeatureSetEditionDefault": {
                  "fields": {
                    "edition": {
                      "type": "Edition",
                      "id": 3
                    },
                    "features": {
                      "type": "FeatureSet",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Struct": {
              "fields": {
                "fields": {
                  "keyType": "string",
                  "type": "Value",
                  "id": 1
                }
              }
            },
            "Value": {
              "oneofs": {
                "kind": {
                  "oneof": [
                    "nullValue",
                    "numberValue",
                    "stringValue",
                    "boolValue",
                    "structValue",
                    "listValue"
                  ]
                }
              },
              "fields": {
                "nullValue": {
                  "type": "NullValue",
                  "id": 1
                },
                "numberValue": {
                  "type": "double",
                  "id": 2
                },
                "stringValue": {
                  "type": "string",
                  "id": 3
                },
                "boolValue": {
                  "type": "bool",
                  "id": 4
                },
                "structValue": {
                  "type": "Struct",
                  "id": 5
                },
                "listValue": {
                  "type": "ListValue",
                  "id": 6
                }
              }
            },
            "NullValue": {
              "values": {
                "NULL_VALUE": 0
              }
            },
            "ListValue": {
              "fields": {
                "values": {
                  "rule": "repeated",
                  "type": "Value",
                  "id": 1
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC",
            "cc_enable_arenas": true
          },
          "nested": {
            "ErrorInfo": {
              "fields": {
                "reason": {
                  "type": "string",
                  "id": 1
                },
                "domain": {
                  "type": "string",
                  "id": 2
                },
                "metadata": {
                  "keyType": "string",
                  "type": "string",
                  "id": 3
                }
              }
            },
            "RetryInfo": {
              "fields": {
                "retryDelay": {
                  "type": "google.protobuf.Duration",
                  "id": 1
                }
              }
            },
            "DebugInfo": {
              "fields": {
                "stackEntries": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                },
                "detail": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "QuotaFailure": {
              "fields": {
                "violations": {
                  "rule": "repeated",
                  "type": "Violation",
                  "id": 1
                }
              },
              "nested": {
                "Violation": {
                  "fields": {
                    "subject": {
                      "type": "string",
                      "id": 1
                    },
                    "description": {
                      "type": "string",
                      "id": 2
                    }
                  }
                }
              }
            },
            "PreconditionFailure": {
              "fields": {
                "violations": {
                  "rule": "repeated",
                  "type": "Violation",
                  "id": 1
                }
              },
              "nested": {
                "Violation": {
                  "fields": {
                    "type": {
                      "type": "string",
                      "id": 1
                    },
                    "subject": {
                      "type": "string",
                      "id": 2
                    },
                    "description": {
                      "type": "string",
                      "id": 3
                    }
                  }
                }
              }
            },
            "BadRequest": {
              "fields": {
                "fieldViolations": {
                  "rule": "repeated",
                  "type": "FieldViolation",
                  "id": 1
                }
              },
              "nested": {
                "FieldViolation": {
                  "fields": {
                    "field": {
                      "type": "string",
                      "id": 1
                    },
                    "description": {
                      "type": "string",
                      "id": 2
                    }
                  }
                }
              }
            },
            "RequestInfo": {
              "fields": {
                "requestId": {
                  "type": "string",
                  "id": 1
                },
                "servingData": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "ResourceInfo": {
              "fields": {
                "resourceType": {
                  "type": "string",
                  "id": 1
                },
                "resourceName": {
                  "type": "string",
                  "id": 2
                },
                "owner": {
                  "type": "string",
                  "id": 3
                },
                "description": {
                  "type": "string",
                  "id": 4
                }
              }
            },
            "Help": {
              "fields": {
                "links": {
                  "rule": "repeated",
                  "type": "Link",
                  "id": 1
                }
              },
              "nested": {
                "Link": {
                  "fields": {
                    "description": {
                      "type": "string",
                      "id": 1
                    },
                    "url": {
                      "type": "string",
                      "id": 2
                    }
                  }
                }
              }
            },
            "LocalizedMessage": {
              "fields": {
                "locale": {
                  "type": "string",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        },
        "spanner": {
          "nested": {
            "admin": {
              "nested": {
                "database": {
                  "nested": {
                    "v1": {
                      "options": {
                        "csharp_namespace": "Google.Cloud.Spanner.Admin.Database.V1",
                        "go_package": "cloud.google.com/go/spanner/admin/database/apiv1/databasepb;databasepb",
                        "java_multiple_files": true,
                        "java_outer_classname": "SpannerDatabaseAdminProto",
                        "java_package": "com.google.spanner.admin.database.v1",
                        "php_namespace": "Google\\Cloud\\Spanner\\Admin\\Database\\V1",
                        "ruby_package": "Google::Cloud::Spanner::Admin::Database::V1",
                        "(google.api.resource_definition).type": "spanner.googleapis.com/Instance",
                        "(google.api.resource_definition).pattern": "projects/{project}/instances/{instance}"
                      },
                      "nested": {
                        "Backup": {
                          "options": {
                            "(google.api.resource).type": "spanner.googleapis.com/Backup",
                            "(google.api.resource).pattern": "projects/{project}/instances/{instance}/backups/{backup}"
                          },
                          "fields": {
                            "database": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            },
                            "versionTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 9
                            },
                            "expireTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            },
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "sizeBytes": {
                              "type": "int64",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "state": {
                              "type": "State",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "referencingDatabases": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 7,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            },
                            "encryptionInfo": {
                              "type": "EncryptionInfo",
                              "id": 8,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "databaseDialect": {
                              "type": "DatabaseDialect",
                              "id": 10,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "referencingBackups": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 11,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            },
                            "maxExpireTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 12,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "CREATING": 1,
                                "READY": 2
                              }
                            }
                          }
                        },
                        "CreateBackupRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "backupId": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "backup": {
                              "type": "Backup",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "encryptionConfig": {
                              "type": "CreateBackupEncryptionConfig",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "CreateBackupMetadata": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            },
                            "database": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            },
                            "progress": {
                              "type": "OperationProgress",
                              "id": 3
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            }
                          }
                        },
                        "CopyBackupRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "backupId": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "sourceBackup": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            },
                            "expireTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "encryptionConfig": {
                              "type": "CopyBackupEncryptionConfig",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "CopyBackupMetadata": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            },
                            "sourceBackup": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            },
                            "progress": {
                              "type": "OperationProgress",
                              "id": 3
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            }
                          }
                        },
                        "UpdateBackupRequest": {
                          "fields": {
                            "backup": {
                              "type": "Backup",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "GetBackupRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            }
                          }
                        },
                        "DeleteBackupRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            }
                          }
                        },
                        "ListBackupsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "filter": {
                              "type": "string",
                              "id": 2
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListBackupsResponse": {
                          "fields": {
                            "backups": {
                              "rule": "repeated",
                              "type": "Backup",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "ListBackupOperationsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "filter": {
                              "type": "string",
                              "id": 2
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListBackupOperationsResponse": {
                          "fields": {
                            "operations": {
                              "rule": "repeated",
                              "type": "google.longrunning.Operation",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "BackupInfo": {
                          "fields": {
                            "backup": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            },
                            "versionTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            },
                            "sourceDatabase": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            }
                          }
                        },
                        "CreateBackupEncryptionConfig": {
                          "fields": {
                            "encryptionType": {
                              "type": "EncryptionType",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "kmsKeyName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                              }
                            }
                          },
                          "nested": {
                            "EncryptionType": {
                              "values": {
                                "ENCRYPTION_TYPE_UNSPECIFIED": 0,
                                "USE_DATABASE_ENCRYPTION": 1,
                                "GOOGLE_DEFAULT_ENCRYPTION": 2,
                                "CUSTOMER_MANAGED_ENCRYPTION": 3
                              }
                            }
                          }
                        },
                        "CopyBackupEncryptionConfig": {
                          "fields": {
                            "encryptionType": {
                              "type": "EncryptionType",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "kmsKeyName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                              }
                            }
                          },
                          "nested": {
                            "EncryptionType": {
                              "values": {
                                "ENCRYPTION_TYPE_UNSPECIFIED": 0,
                                "USE_CONFIG_DEFAULT_OR_BACKUP_ENCRYPTION": 1,
                                "GOOGLE_DEFAULT_ENCRYPTION": 2,
                                "CUSTOMER_MANAGED_ENCRYPTION": 3
                              }
                            }
                          }
                        },
                        "OperationProgress": {
                          "fields": {
                            "progressPercent": {
                              "type": "int32",
                              "id": 1
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          }
                        },
                        "EncryptionConfig": {
                          "fields": {
                            "kmsKeyName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                              }
                            }
                          }
                        },
                        "EncryptionInfo": {
                          "fields": {
                            "encryptionType": {
                              "type": "Type",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "encryptionStatus": {
                              "type": "google.rpc.Status",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "kmsKeyVersion": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKeyVersion"
                              }
                            }
                          },
                          "nested": {
                            "Type": {
                              "values": {
                                "TYPE_UNSPECIFIED": 0,
                                "GOOGLE_DEFAULT_ENCRYPTION": 1,
                                "CUSTOMER_MANAGED_ENCRYPTION": 2
                              }
                            }
                          }
                        },
                        "DatabaseDialect": {
                          "values": {
                            "DATABASE_DIALECT_UNSPECIFIED": 0,
                            "GOOGLE_STANDARD_SQL": 1,
                            "POSTGRESQL": 2
                          }
                        },
                        "DatabaseAdmin": {
                          "options": {
                            "(google.api.default_host)": "spanner.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/spanner.admin"
                          },
                          "methods": {
                            "ListDatabases": {
                              "requestType": "ListDatabasesRequest",
                              "responseType": "ListDatabasesResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/instances/*}/databases",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/instances/*}/databases"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "CreateDatabase": {
                              "requestType": "CreateDatabaseRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v1/{parent=projects/*/instances/*}/databases",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "parent,create_statement",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.database.v1.Database",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.database.v1.CreateDatabaseMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{parent=projects/*/instances/*}/databases",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,create_statement"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.database.v1.Database",
                                    "metadata_type": "google.spanner.admin.database.v1.CreateDatabaseMetadata"
                                  }
                                }
                              ]
                            },
                            "GetDatabase": {
                              "requestType": "GetDatabaseRequest",
                              "responseType": "Database",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/instances/*/databases/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/instances/*/databases/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "UpdateDatabase": {
                              "requestType": "UpdateDatabaseRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).patch": "/v1/{database.name=projects/*/instances/*/databases/*}",
                                "(google.api.http).body": "database",
                                "(google.api.method_signature)": "database,update_mask",
                                "(google.longrunning.operation_info).response_type": "Database",
                                "(google.longrunning.operation_info).metadata_type": "UpdateDatabaseMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v1/{database.name=projects/*/instances/*/databases/*}",
                                    "body": "database"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "database,update_mask"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "Database",
                                    "metadata_type": "UpdateDatabaseMetadata"
                                  }
                                }
                              ]
                            },
                            "UpdateDatabaseDdl": {
                              "requestType": "UpdateDatabaseDdlRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).patch": "/v1/{database=projects/*/instances/*/databases/*}/ddl",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "database,statements",
                                "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.database.v1.UpdateDatabaseDdlMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v1/{database=projects/*/instances/*/databases/*}/ddl",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "database,statements"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.protobuf.Empty",
                                    "metadata_type": "google.spanner.admin.database.v1.UpdateDatabaseDdlMetadata"
                                  }
                                }
                              ]
                            },
                            "DropDatabase": {
                              "requestType": "DropDatabaseRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v1/{database=projects/*/instances/*/databases/*}",
                                "(google.api.method_signature)": "database"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v1/{database=projects/*/instances/*/databases/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "database"
                                }
                              ]
                            },
                            "GetDatabaseDdl": {
                              "requestType": "GetDatabaseDdlRequest",
                              "responseType": "GetDatabaseDdlResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{database=projects/*/instances/*/databases/*}/ddl",
                                "(google.api.method_signature)": "database"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{database=projects/*/instances/*/databases/*}/ddl"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "database"
                                }
                              ]
                            },
                            "SetIamPolicy": {
                              "requestType": "google.iam.v1.SetIamPolicyRequest",
                              "responseType": "google.iam.v1.Policy",
                              "options": {
                                "(google.api.http).post": "/v1/{resource=projects/*/instances/*/databases/*}:setIamPolicy",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.post": "/v1/{resource=projects/*/instances/*/backups/*}:setIamPolicy",
                                "(google.api.http).additional_bindings.body": "*",
                                "(google.api.method_signature)": "resource,policy"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{resource=projects/*/instances/*/databases/*}:setIamPolicy",
                                    "body": "*",
                                    "additional_bindings": {
                                      "post": "/v1/{resource=projects/*/instances/*/backups/*}:setIamPolicy",
                                      "body": "*"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "resource,policy"
                                }
                              ]
                            },
                            "GetIamPolicy": {
                              "requestType": "google.iam.v1.GetIamPolicyRequest",
                              "responseType": "google.iam.v1.Policy",
                              "options": {
                                "(google.api.http).post": "/v1/{resource=projects/*/instances/*/databases/*}:getIamPolicy",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.post": "/v1/{resource=projects/*/instances/*/backups/*}:getIamPolicy",
                                "(google.api.http).additional_bindings.body": "*",
                                "(google.api.method_signature)": "resource"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{resource=projects/*/instances/*/databases/*}:getIamPolicy",
                                    "body": "*",
                                    "additional_bindings": {
                                      "post": "/v1/{resource=projects/*/instances/*/backups/*}:getIamPolicy",
                                      "body": "*"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "resource"
                                }
                              ]
                            },
                            "TestIamPermissions": {
                              "requestType": "google.iam.v1.TestIamPermissionsRequest",
                              "responseType": "google.iam.v1.TestIamPermissionsResponse",
                              "options": {
                                "(google.api.http).post": "/v1/{resource=projects/*/instances/*/databases/*}:testIamPermissions",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.post": "/v1/{resource=projects/*/instances/*/databases/*/databaseRoles/*}:testIamPermissions",
                                "(google.api.http).additional_bindings.body": "*",
                                "(google.api.method_signature)": "resource,permissions"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{resource=projects/*/instances/*/databases/*}:testIamPermissions",
                                    "body": "*",
                                    "additional_bindings": [
                                      {
                                        "post": "/v1/{resource=projects/*/instances/*/backups/*}:testIamPermissions",
                                        "body": "*"
                                      },
                                      {
                                        "post": "/v1/{resource=projects/*/instances/*/databases/*/databaseRoles/*}:testIamPermissions",
                                        "body": "*"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "resource,permissions"
                                }
                              ]
                            },
                            "CreateBackup": {
                              "requestType": "CreateBackupRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v1/{parent=projects/*/instances/*}/backups",
                                "(google.api.http).body": "backup",
                                "(google.api.method_signature)": "parent,backup,backup_id",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.database.v1.Backup",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.database.v1.CreateBackupMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{parent=projects/*/instances/*}/backups",
                                    "body": "backup"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,backup,backup_id"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.database.v1.Backup",
                                    "metadata_type": "google.spanner.admin.database.v1.CreateBackupMetadata"
                                  }
                                }
                              ]
                            },
                            "CopyBackup": {
                              "requestType": "CopyBackupRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v1/{parent=projects/*/instances/*}/backups:copy",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "parent,backup_id,source_backup,expire_time",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.database.v1.Backup",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.database.v1.CopyBackupMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{parent=projects/*/instances/*}/backups:copy",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,backup_id,source_backup,expire_time"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.database.v1.Backup",
                                    "metadata_type": "google.spanner.admin.database.v1.CopyBackupMetadata"
                                  }
                                }
                              ]
                            },
                            "GetBackup": {
                              "requestType": "GetBackupRequest",
                              "responseType": "Backup",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/instances/*/backups/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/instances/*/backups/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "UpdateBackup": {
                              "requestType": "UpdateBackupRequest",
                              "responseType": "Backup",
                              "options": {
                                "(google.api.http).patch": "/v1/{backup.name=projects/*/instances/*/backups/*}",
                                "(google.api.http).body": "backup",
                                "(google.api.method_signature)": "backup,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v1/{backup.name=projects/*/instances/*/backups/*}",
                                    "body": "backup"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "backup,update_mask"
                                }
                              ]
                            },
                            "DeleteBackup": {
                              "requestType": "DeleteBackupRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v1/{name=projects/*/instances/*/backups/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v1/{name=projects/*/instances/*/backups/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ListBackups": {
                              "requestType": "ListBackupsRequest",
                              "responseType": "ListBackupsResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/instances/*}/backups",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/instances/*}/backups"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "RestoreDatabase": {
                              "requestType": "RestoreDatabaseRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v1/{parent=projects/*/instances/*}/databases:restore",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "parent,database_id,backup",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.database.v1.Database",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.database.v1.RestoreDatabaseMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{parent=projects/*/instances/*}/databases:restore",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,database_id,backup"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.database.v1.Database",
                                    "metadata_type": "google.spanner.admin.database.v1.RestoreDatabaseMetadata"
                                  }
                                }
                              ]
                            },
                            "ListDatabaseOperations": {
                              "requestType": "ListDatabaseOperationsRequest",
                              "responseType": "ListDatabaseOperationsResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/instances/*}/databaseOperations",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/instances/*}/databaseOperations"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "ListBackupOperations": {
                              "requestType": "ListBackupOperationsRequest",
                              "responseType": "ListBackupOperationsResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/instances/*}/backupOperations",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/instances/*}/backupOperations"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "ListDatabaseRoles": {
                              "requestType": "ListDatabaseRolesRequest",
                              "responseType": "ListDatabaseRolesResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/instances/*/databases/*}/databaseRoles",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/instances/*/databases/*}/databaseRoles"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            }
                          }
                        },
                        "RestoreInfo": {
                          "oneofs": {
                            "sourceInfo": {
                              "oneof": [
                                "backupInfo"
                              ]
                            }
                          },
                          "fields": {
                            "sourceType": {
                              "type": "RestoreSourceType",
                              "id": 1
                            },
                            "backupInfo": {
                              "type": "BackupInfo",
                              "id": 2
                            }
                          }
                        },
                        "Database": {
                          "options": {
                            "(google.api.resource).type": "spanner.googleapis.com/Database",
                            "(google.api.resource).pattern": "projects/{project}/instances/{instance}/databases/{database}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "state": {
                              "type": "State",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "restoreInfo": {
                              "type": "RestoreInfo",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "encryptionConfig": {
                              "type": "EncryptionConfig",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "encryptionInfo": {
                              "rule": "repeated",
                              "type": "EncryptionInfo",
                              "id": 8,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "versionRetentionPeriod": {
                              "type": "string",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "earliestVersionTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 7,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "defaultLeader": {
                              "type": "string",
                              "id": 9,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "databaseDialect": {
                              "type": "DatabaseDialect",
                              "id": 10,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "enableDropProtection": {
                              "type": "bool",
                              "id": 11
                            },
                            "reconciling": {
                              "type": "bool",
                              "id": 12,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "CREATING": 1,
                                "READY": 2,
                                "READY_OPTIMIZING": 3
                              }
                            }
                          }
                        },
                        "ListDatabasesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListDatabasesResponse": {
                          "fields": {
                            "databases": {
                              "rule": "repeated",
                              "type": "Database",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "CreateDatabaseRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "createStatement": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "extraStatements": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "encryptionConfig": {
                              "type": "EncryptionConfig",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "databaseDialect": {
                              "type": "DatabaseDialect",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "protoDescriptors": {
                              "type": "bytes",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "CreateDatabaseMetadata": {
                          "fields": {
                            "database": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            }
                          }
                        },
                        "GetDatabaseRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            }
                          }
                        },
                        "UpdateDatabaseRequest": {
                          "fields": {
                            "database": {
                              "type": "Database",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "UpdateDatabaseMetadata": {
                          "fields": {
                            "request": {
                              "type": "UpdateDatabaseRequest",
                              "id": 1
                            },
                            "progress": {
                              "type": "OperationProgress",
                              "id": 2
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          }
                        },
                        "UpdateDatabaseDdlRequest": {
                          "fields": {
                            "database": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            },
                            "statements": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "operationId": {
                              "type": "string",
                              "id": 3
                            },
                            "protoDescriptors": {
                              "type": "bytes",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "DdlStatementActionInfo": {
                          "fields": {
                            "action": {
                              "type": "string",
                              "id": 1
                            },
                            "entityType": {
                              "type": "string",
                              "id": 2
                            },
                            "entityNames": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "UpdateDatabaseDdlMetadata": {
                          "fields": {
                            "database": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            },
                            "statements": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            },
                            "commitTimestamps": {
                              "rule": "repeated",
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            },
                            "throttled": {
                              "type": "bool",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "progress": {
                              "rule": "repeated",
                              "type": "OperationProgress",
                              "id": 5
                            },
                            "actions": {
                              "rule": "repeated",
                              "type": "DdlStatementActionInfo",
                              "id": 6
                            }
                          }
                        },
                        "DropDatabaseRequest": {
                          "fields": {
                            "database": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            }
                          }
                        },
                        "GetDatabaseDdlRequest": {
                          "fields": {
                            "database": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            }
                          }
                        },
                        "GetDatabaseDdlResponse": {
                          "fields": {
                            "statements": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            },
                            "protoDescriptors": {
                              "type": "bytes",
                              "id": 2
                            }
                          }
                        },
                        "ListDatabaseOperationsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "filter": {
                              "type": "string",
                              "id": 2
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListDatabaseOperationsResponse": {
                          "fields": {
                            "operations": {
                              "rule": "repeated",
                              "type": "google.longrunning.Operation",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "RestoreDatabaseRequest": {
                          "oneofs": {
                            "source": {
                              "oneof": [
                                "backup"
                              ]
                            }
                          },
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "databaseId": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "backup": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Backup"
                              }
                            },
                            "encryptionConfig": {
                              "type": "RestoreDatabaseEncryptionConfig",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "RestoreDatabaseEncryptionConfig": {
                          "fields": {
                            "encryptionType": {
                              "type": "EncryptionType",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "kmsKeyName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                              }
                            }
                          },
                          "nested": {
                            "EncryptionType": {
                              "values": {
                                "ENCRYPTION_TYPE_UNSPECIFIED": 0,
                                "USE_CONFIG_DEFAULT_OR_BACKUP_ENCRYPTION": 1,
                                "GOOGLE_DEFAULT_ENCRYPTION": 2,
                                "CUSTOMER_MANAGED_ENCRYPTION": 3
                              }
                            }
                          }
                        },
                        "RestoreDatabaseMetadata": {
                          "oneofs": {
                            "sourceInfo": {
                              "oneof": [
                                "backupInfo"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            },
                            "sourceType": {
                              "type": "RestoreSourceType",
                              "id": 2
                            },
                            "backupInfo": {
                              "type": "BackupInfo",
                              "id": 3
                            },
                            "progress": {
                              "type": "OperationProgress",
                              "id": 4
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 5
                            },
                            "optimizeDatabaseOperationName": {
                              "type": "string",
                              "id": 6
                            }
                          }
                        },
                        "OptimizeRestoredDatabaseMetadata": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            },
                            "progress": {
                              "type": "OperationProgress",
                              "id": 2
                            }
                          }
                        },
                        "RestoreSourceType": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "BACKUP": 1
                          }
                        },
                        "DatabaseRole": {
                          "options": {
                            "(google.api.resource).type": "spanner.googleapis.com/DatabaseRole",
                            "(google.api.resource).pattern": "projects/{project}/instances/{instance}/databases/{database}/databaseRoles/{role}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "ListDatabaseRolesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListDatabaseRolesResponse": {
                          "fields": {
                            "databaseRoles": {
                              "rule": "repeated",
                              "type": "DatabaseRole",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "instance": {
                  "nested": {
                    "v1": {
                      "options": {
                        "csharp_namespace": "Google.Cloud.Spanner.Admin.Instance.V1",
                        "go_package": "cloud.google.com/go/spanner/admin/instance/apiv1/instancepb;instancepb",
                        "java_multiple_files": true,
                        "java_outer_classname": "SpannerInstanceAdminProto",
                        "java_package": "com.google.spanner.admin.instance.v1",
                        "php_namespace": "Google\\Cloud\\Spanner\\Admin\\Instance\\V1",
                        "ruby_package": "Google::Cloud::Spanner::Admin::Instance::V1"
                      },
                      "nested": {
                        "OperationProgress": {
                          "fields": {
                            "progressPercent": {
                              "type": "int32",
                              "id": 1
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          }
                        },
                        "InstanceAdmin": {
                          "options": {
                            "(google.api.default_host)": "spanner.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/spanner.admin"
                          },
                          "methods": {
                            "ListInstanceConfigs": {
                              "requestType": "ListInstanceConfigsRequest",
                              "responseType": "ListInstanceConfigsResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*}/instanceConfigs",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*}/instanceConfigs"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetInstanceConfig": {
                              "requestType": "GetInstanceConfigRequest",
                              "responseType": "InstanceConfig",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/instanceConfigs/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/instanceConfigs/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateInstanceConfig": {
                              "requestType": "CreateInstanceConfigRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v1/{parent=projects/*}/instanceConfigs",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "parent,instance_config,instance_config_id",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.instance.v1.InstanceConfig",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.instance.v1.CreateInstanceConfigMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{parent=projects/*}/instanceConfigs",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,instance_config,instance_config_id"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.instance.v1.InstanceConfig",
                                    "metadata_type": "google.spanner.admin.instance.v1.CreateInstanceConfigMetadata"
                                  }
                                }
                              ]
                            },
                            "UpdateInstanceConfig": {
                              "requestType": "UpdateInstanceConfigRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).patch": "/v1/{instance_config.name=projects/*/instanceConfigs/*}",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "instance_config,update_mask",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.instance.v1.InstanceConfig",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v1/{instance_config.name=projects/*/instanceConfigs/*}",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "instance_config,update_mask"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.instance.v1.InstanceConfig",
                                    "metadata_type": "google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata"
                                  }
                                }
                              ]
                            },
                            "DeleteInstanceConfig": {
                              "requestType": "DeleteInstanceConfigRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v1/{name=projects/*/instanceConfigs/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v1/{name=projects/*/instanceConfigs/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ListInstanceConfigOperations": {
                              "requestType": "ListInstanceConfigOperationsRequest",
                              "responseType": "ListInstanceConfigOperationsResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*}/instanceConfigOperations",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*}/instanceConfigOperations"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "ListInstances": {
                              "requestType": "ListInstancesRequest",
                              "responseType": "ListInstancesResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*}/instances",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*}/instances"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "ListInstancePartitions": {
                              "requestType": "ListInstancePartitionsRequest",
                              "responseType": "ListInstancePartitionsResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/instances/*}/instancePartitions",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/instances/*}/instancePartitions"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetInstance": {
                              "requestType": "GetInstanceRequest",
                              "responseType": "Instance",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/instances/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/instances/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateInstance": {
                              "requestType": "CreateInstanceRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v1/{parent=projects/*}/instances",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "parent,instance_id,instance",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.instance.v1.Instance",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.instance.v1.CreateInstanceMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{parent=projects/*}/instances",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,instance_id,instance"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.instance.v1.Instance",
                                    "metadata_type": "google.spanner.admin.instance.v1.CreateInstanceMetadata"
                                  }
                                }
                              ]
                            },
                            "UpdateInstance": {
                              "requestType": "UpdateInstanceRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).patch": "/v1/{instance.name=projects/*/instances/*}",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "instance,field_mask",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.instance.v1.Instance",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.instance.v1.UpdateInstanceMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v1/{instance.name=projects/*/instances/*}",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "instance,field_mask"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.instance.v1.Instance",
                                    "metadata_type": "google.spanner.admin.instance.v1.UpdateInstanceMetadata"
                                  }
                                }
                              ]
                            },
                            "DeleteInstance": {
                              "requestType": "DeleteInstanceRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v1/{name=projects/*/instances/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v1/{name=projects/*/instances/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "SetIamPolicy": {
                              "requestType": "google.iam.v1.SetIamPolicyRequest",
                              "responseType": "google.iam.v1.Policy",
                              "options": {
                                "(google.api.http).post": "/v1/{resource=projects/*/instances/*}:setIamPolicy",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "resource,policy"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{resource=projects/*/instances/*}:setIamPolicy",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "resource,policy"
                                }
                              ]
                            },
                            "GetIamPolicy": {
                              "requestType": "google.iam.v1.GetIamPolicyRequest",
                              "responseType": "google.iam.v1.Policy",
                              "options": {
                                "(google.api.http).post": "/v1/{resource=projects/*/instances/*}:getIamPolicy",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "resource"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{resource=projects/*/instances/*}:getIamPolicy",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "resource"
                                }
                              ]
                            },
                            "TestIamPermissions": {
                              "requestType": "google.iam.v1.TestIamPermissionsRequest",
                              "responseType": "google.iam.v1.TestIamPermissionsResponse",
                              "options": {
                                "(google.api.http).post": "/v1/{resource=projects/*/instances/*}:testIamPermissions",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "resource,permissions"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{resource=projects/*/instances/*}:testIamPermissions",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "resource,permissions"
                                }
                              ]
                            },
                            "GetInstancePartition": {
                              "requestType": "GetInstancePartitionRequest",
                              "responseType": "InstancePartition",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/instances/*/instancePartitions/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/instances/*/instancePartitions/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateInstancePartition": {
                              "requestType": "CreateInstancePartitionRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v1/{parent=projects/*/instances/*}/instancePartitions",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "parent,instance_partition,instance_partition_id",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.instance.v1.InstancePartition",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.instance.v1.CreateInstancePartitionMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{parent=projects/*/instances/*}/instancePartitions",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,instance_partition,instance_partition_id"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.instance.v1.InstancePartition",
                                    "metadata_type": "google.spanner.admin.instance.v1.CreateInstancePartitionMetadata"
                                  }
                                }
                              ]
                            },
                            "DeleteInstancePartition": {
                              "requestType": "DeleteInstancePartitionRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v1/{name=projects/*/instances/*/instancePartitions/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v1/{name=projects/*/instances/*/instancePartitions/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "UpdateInstancePartition": {
                              "requestType": "UpdateInstancePartitionRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).patch": "/v1/{instance_partition.name=projects/*/instances/*/instancePartitions/*}",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "instance_partition,field_mask",
                                "(google.longrunning.operation_info).response_type": "google.spanner.admin.instance.v1.InstancePartition",
                                "(google.longrunning.operation_info).metadata_type": "google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v1/{instance_partition.name=projects/*/instances/*/instancePartitions/*}",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "instance_partition,field_mask"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.spanner.admin.instance.v1.InstancePartition",
                                    "metadata_type": "google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata"
                                  }
                                }
                              ]
                            },
                            "ListInstancePartitionOperations": {
                              "requestType": "ListInstancePartitionOperationsRequest",
                              "responseType": "ListInstancePartitionOperationsResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/instances/*}/instancePartitionOperations",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/instances/*}/instancePartitionOperations"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            }
                          }
                        },
                        "ReplicaInfo": {
                          "fields": {
                            "location": {
                              "type": "string",
                              "id": 1
                            },
                            "type": {
                              "type": "ReplicaType",
                              "id": 2
                            },
                            "defaultLeaderLocation": {
                              "type": "bool",
                              "id": 3
                            }
                          },
                          "nested": {
                            "ReplicaType": {
                              "values": {
                                "TYPE_UNSPECIFIED": 0,
                                "READ_WRITE": 1,
                                "READ_ONLY": 2,
                                "WITNESS": 3
                              }
                            }
                          }
                        },
                        "InstanceConfig": {
                          "options": {
                            "(google.api.resource).type": "spanner.googleapis.com/InstanceConfig",
                            "(google.api.resource).pattern": "projects/{project}/instanceConfigs/{instance_config}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2
                            },
                            "configType": {
                              "type": "Type",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "replicas": {
                              "rule": "repeated",
                              "type": "ReplicaInfo",
                              "id": 3
                            },
                            "optionalReplicas": {
                              "rule": "repeated",
                              "type": "ReplicaInfo",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "baseConfig": {
                              "type": "string",
                              "id": 7,
                              "options": {
                                "(google.api.resource_reference).type": "spanner.googleapis.com/InstanceConfig"
                              }
                            },
                            "labels": {
                              "keyType": "string",
                              "type": "string",
                              "id": 8
                            },
                            "etag": {
                              "type": "string",
                              "id": 9
                            },
                            "leaderOptions": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 4
                            },
                            "reconciling": {
                              "type": "bool",
                              "id": 10,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "state": {
                              "type": "State",
                              "id": 11,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "Type": {
                              "values": {
                                "TYPE_UNSPECIFIED": 0,
                                "GOOGLE_MANAGED": 1,
                                "USER_MANAGED": 2
                              }
                            },
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "CREATING": 1,
                                "READY": 2
                              }
                            }
                          }
                        },
                        "AutoscalingConfig": {
                          "fields": {
                            "autoscalingLimits": {
                              "type": "AutoscalingLimits",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "autoscalingTargets": {
                              "type": "AutoscalingTargets",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "AutoscalingLimits": {
                              "oneofs": {
                                "minLimit": {
                                  "oneof": [
                                    "minNodes",
                                    "minProcessingUnits"
                                  ]
                                },
                                "maxLimit": {
                                  "oneof": [
                                    "maxNodes",
                                    "maxProcessingUnits"
                                  ]
                                }
                              },
                              "fields": {
                                "minNodes": {
                                  "type": "int32",
                                  "id": 1
                                },
                                "minProcessingUnits": {
                                  "type": "int32",
                                  "id": 2
                                },
                                "maxNodes": {
                                  "type": "int32",
                                  "id": 3
                                },
                                "maxProcessingUnits": {
                                  "type": "int32",
                                  "id": 4
                                }
                              }
                            },
                            "AutoscalingTargets": {
                              "fields": {
                                "highPriorityCpuUtilizationPercent": {
                                  "type": "int32",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "storageUtilizationPercent": {
                                  "type": "int32",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Instance": {
                          "options": {
                            "(google.api.resource).type": "spanner.googleapis.com/Instance",
                            "(google.api.resource).pattern": "projects/{project}/instances/{instance}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "config": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/InstanceConfig"
                              }
                            },
                            "displayName": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "nodeCount": {
                              "type": "int32",
                              "id": 5
                            },
                            "processingUnits": {
                              "type": "int32",
                              "id": 9
                            },
                            "autoscalingConfig": {
                              "type": "AutoscalingConfig",
                              "id": 17,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "state": {
                              "type": "State",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "labels": {
                              "keyType": "string",
                              "type": "string",
                              "id": 7
                            },
                            "endpointUris": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 8
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 11,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "updateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 12,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "CREATING": 1,
                                "READY": 2
                              }
                            }
                          }
                        },
                        "ListInstanceConfigsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "cloudresourcemanager.googleapis.com/Project"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListInstanceConfigsResponse": {
                          "fields": {
                            "instanceConfigs": {
                              "rule": "repeated",
                              "type": "InstanceConfig",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetInstanceConfigRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/InstanceConfig"
                              }
                            }
                          }
                        },
                        "CreateInstanceConfigRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "cloudresourcemanager.googleapis.com/Project"
                              }
                            },
                            "instanceConfigId": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "instanceConfig": {
                              "type": "InstanceConfig",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "validateOnly": {
                              "type": "bool",
                              "id": 4
                            }
                          }
                        },
                        "UpdateInstanceConfigRequest": {
                          "fields": {
                            "instanceConfig": {
                              "type": "InstanceConfig",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "validateOnly": {
                              "type": "bool",
                              "id": 3
                            }
                          }
                        },
                        "DeleteInstanceConfigRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/InstanceConfig"
                              }
                            },
                            "etag": {
                              "type": "string",
                              "id": 2
                            },
                            "validateOnly": {
                              "type": "bool",
                              "id": 3
                            }
                          }
                        },
                        "ListInstanceConfigOperationsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "cloudresourcemanager.googleapis.com/Project"
                              }
                            },
                            "filter": {
                              "type": "string",
                              "id": 2
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListInstanceConfigOperationsResponse": {
                          "fields": {
                            "operations": {
                              "rule": "repeated",
                              "type": "google.longrunning.Operation",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetInstanceRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "fieldMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2
                            }
                          }
                        },
                        "CreateInstanceRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "cloudresourcemanager.googleapis.com/Project"
                              }
                            },
                            "instanceId": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "instance": {
                              "type": "Instance",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "ListInstancesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "cloudresourcemanager.googleapis.com/Project"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            },
                            "filter": {
                              "type": "string",
                              "id": 4
                            },
                            "instanceDeadline": {
                              "type": "google.protobuf.Timestamp",
                              "id": 5
                            }
                          }
                        },
                        "ListInstancesResponse": {
                          "fields": {
                            "instances": {
                              "rule": "repeated",
                              "type": "Instance",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            },
                            "unreachable": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "UpdateInstanceRequest": {
                          "fields": {
                            "instance": {
                              "type": "Instance",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "fieldMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "DeleteInstanceRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            }
                          }
                        },
                        "CreateInstanceMetadata": {
                          "fields": {
                            "instance": {
                              "type": "Instance",
                              "id": 1
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            }
                          }
                        },
                        "UpdateInstanceMetadata": {
                          "fields": {
                            "instance": {
                              "type": "Instance",
                              "id": 1
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            }
                          }
                        },
                        "CreateInstanceConfigMetadata": {
                          "fields": {
                            "instanceConfig": {
                              "type": "InstanceConfig",
                              "id": 1
                            },
                            "progress": {
                              "type": "OperationProgress",
                              "id": 2
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          }
                        },
                        "UpdateInstanceConfigMetadata": {
                          "fields": {
                            "instanceConfig": {
                              "type": "InstanceConfig",
                              "id": 1
                            },
                            "progress": {
                              "type": "OperationProgress",
                              "id": 2
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          }
                        },
                        "InstancePartition": {
                          "options": {
                            "(google.api.resource).type": "spanner.googleapis.com/InstancePartition",
                            "(google.api.resource).pattern": "projects/{project}/instances/{instance}/instancePartitions/{instance_partition}"
                          },
                          "oneofs": {
                            "computeCapacity": {
                              "oneof": [
                                "nodeCount",
                                "processingUnits"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "config": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/InstanceConfig"
                              }
                            },
                            "displayName": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "nodeCount": {
                              "type": "int32",
                              "id": 5
                            },
                            "processingUnits": {
                              "type": "int32",
                              "id": 6
                            },
                            "state": {
                              "type": "State",
                              "id": 7,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 8,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "updateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 9,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "referencingDatabases": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 10,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "referencingBackups": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 11,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "etag": {
                              "type": "string",
                              "id": 12
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "CREATING": 1,
                                "READY": 2
                              }
                            }
                          }
                        },
                        "CreateInstancePartitionMetadata": {
                          "fields": {
                            "instancePartition": {
                              "type": "InstancePartition",
                              "id": 1
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            }
                          }
                        },
                        "CreateInstancePartitionRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "instancePartitionId": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "instancePartition": {
                              "type": "InstancePartition",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "DeleteInstancePartitionRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/InstancePartition"
                              }
                            },
                            "etag": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetInstancePartitionRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/InstancePartition"
                              }
                            }
                          }
                        },
                        "UpdateInstancePartitionRequest": {
                          "fields": {
                            "instancePartition": {
                              "type": "InstancePartition",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "fieldMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "UpdateInstancePartitionMetadata": {
                          "fields": {
                            "instancePartition": {
                              "type": "InstancePartition",
                              "id": 1
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            },
                            "cancelTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            }
                          }
                        },
                        "ListInstancePartitionsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            },
                            "instancePartitionDeadline": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "ListInstancePartitionsResponse": {
                          "fields": {
                            "instancePartitions": {
                              "rule": "repeated",
                              "type": "InstancePartition",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            },
                            "unreachable": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListInstancePartitionOperationsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "spanner.googleapis.com/Instance"
                              }
                            },
                            "filter": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "instancePartitionDeadline": {
                              "type": "google.protobuf.Timestamp",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "ListInstancePartitionOperationsResponse": {
                          "fields": {
                            "operations": {
                              "rule": "repeated",
                              "type": "google.longrunning.Operation",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            },
                            "unreachableInstancePartitions": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "executor": {
              "nested": {
                "v1": {
                  "options": {
                    "go_package": "cloud.google.com/go/spanner/executor/apiv1/executorpb;executorpb",
                    "java_multiple_files": true,
                    "java_outer_classname": "CloudExecutorProto",
                    "java_package": "com.google.spanner.executor.v1"
                  },
                  "nested": {
                    "SpannerExecutorProxy": {
                      "options": {
                        "(google.api.default_host)": "spanner-cloud-executor.googleapis.com"
                      },
                      "methods": {
                        "ExecuteActionAsync": {
                          "requestType": "SpannerAsyncActionRequest",
                          "requestStream": true,
                          "responseType": "SpannerAsyncActionResponse",
                          "responseStream": true
                        }
                      }
                    },
                    "SpannerAsyncActionRequest": {
                      "fields": {
                        "actionId": {
                          "type": "int32",
                          "id": 1
                        },
                        "action": {
                          "type": "SpannerAction",
                          "id": 2
                        }
                      }
                    },
                    "SpannerAsyncActionResponse": {
                      "fields": {
                        "actionId": {
                          "type": "int32",
                          "id": 1
                        },
                        "outcome": {
                          "type": "SpannerActionOutcome",
                          "id": 2
                        }
                      }
                    },
                    "SpannerAction": {
                      "oneofs": {
                        "action": {
                          "oneof": [
                            "start",
                            "finish",
                            "read",
                            "query",
                            "mutation",
                            "dml",
                            "batchDml",
                            "write",
                            "partitionedUpdate",
                            "admin",
                            "startBatchTxn",
                            "closeBatchTxn",
                            "generateDbPartitionsRead",
                            "generateDbPartitionsQuery",
                            "executePartition",
                            "executeChangeStreamQuery"
                          ]
                        }
                      },
                      "fields": {
                        "databasePath": {
                          "type": "string",
                          "id": 1
                        },
                        "start": {
                          "type": "StartTransactionAction",
                          "id": 10
                        },
                        "finish": {
                          "type": "FinishTransactionAction",
                          "id": 11
                        },
                        "read": {
                          "type": "ReadAction",
                          "id": 20
                        },
                        "query": {
                          "type": "QueryAction",
                          "id": 21
                        },
                        "mutation": {
                          "type": "MutationAction",
                          "id": 22
                        },
                        "dml": {
                          "type": "DmlAction",
                          "id": 23
                        },
                        "batchDml": {
                          "type": "BatchDmlAction",
                          "id": 24
                        },
                        "write": {
                          "type": "WriteMutationsAction",
                          "id": 25
                        },
                        "partitionedUpdate": {
                          "type": "PartitionedUpdateAction",
                          "id": 27
                        },
                        "admin": {
                          "type": "AdminAction",
                          "id": 30
                        },
                        "startBatchTxn": {
                          "type": "StartBatchTransactionAction",
                          "id": 40
                        },
                        "closeBatchTxn": {
                          "type": "CloseBatchTransactionAction",
                          "id": 41
                        },
                        "generateDbPartitionsRead": {
                          "type": "GenerateDbPartitionsForReadAction",
                          "id": 42
                        },
                        "generateDbPartitionsQuery": {
                          "type": "GenerateDbPartitionsForQueryAction",
                          "id": 43
                        },
                        "executePartition": {
                          "type": "ExecutePartitionAction",
                          "id": 44
                        },
                        "executeChangeStreamQuery": {
                          "type": "ExecuteChangeStreamQuery",
                          "id": 50
                        }
                      }
                    },
                    "ReadAction": {
                      "oneofs": {
                        "_index": {
                          "oneof": [
                            "index"
                          ]
                        }
                      },
                      "fields": {
                        "table": {
                          "type": "string",
                          "id": 1
                        },
                        "index": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "column": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        },
                        "keys": {
                          "type": "KeySet",
                          "id": 4
                        },
                        "limit": {
                          "type": "int32",
                          "id": 5
                        }
                      }
                    },
                    "QueryAction": {
                      "fields": {
                        "sql": {
                          "type": "string",
                          "id": 1
                        },
                        "params": {
                          "rule": "repeated",
                          "type": "Parameter",
                          "id": 2
                        }
                      },
                      "nested": {
                        "Parameter": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "type": {
                              "type": "google.spanner.v1.Type",
                              "id": 2
                            },
                            "value": {
                              "type": "Value",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "DmlAction": {
                      "oneofs": {
                        "_autocommitIfSupported": {
                          "oneof": [
                            "autocommitIfSupported"
                          ]
                        }
                      },
                      "fields": {
                        "update": {
                          "type": "QueryAction",
                          "id": 1
                        },
                        "autocommitIfSupported": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "BatchDmlAction": {
                      "fields": {
                        "updates": {
                          "rule": "repeated",
                          "type": "QueryAction",
                          "id": 1
                        }
                      }
                    },
                    "Value": {
                      "oneofs": {
                        "valueType": {
                          "oneof": [
                            "isNull",
                            "intValue",
                            "boolValue",
                            "doubleValue",
                            "bytesValue",
                            "stringValue",
                            "structValue",
                            "timestampValue",
                            "dateDaysValue",
                            "isCommitTimestamp",
                            "arrayValue"
                          ]
                        },
                        "_arrayType": {
                          "oneof": [
                            "arrayType"
                          ]
                        }
                      },
                      "fields": {
                        "isNull": {
                          "type": "bool",
                          "id": 1
                        },
                        "intValue": {
                          "type": "int64",
                          "id": 2
                        },
                        "boolValue": {
                          "type": "bool",
                          "id": 3
                        },
                        "doubleValue": {
                          "type": "double",
                          "id": 4
                        },
                        "bytesValue": {
                          "type": "bytes",
                          "id": 5
                        },
                        "stringValue": {
                          "type": "string",
                          "id": 6
                        },
                        "structValue": {
                          "type": "ValueList",
                          "id": 7
                        },
                        "timestampValue": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8
                        },
                        "dateDaysValue": {
                          "type": "int32",
                          "id": 9
                        },
                        "isCommitTimestamp": {
                          "type": "bool",
                          "id": 10
                        },
                        "arrayValue": {
                          "type": "ValueList",
                          "id": 11
                        },
                        "arrayType": {
                          "type": "google.spanner.v1.Type",
                          "id": 12,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "KeyRange": {
                      "oneofs": {
                        "_type": {
                          "oneof": [
                            "type"
                          ]
                        }
                      },
                      "fields": {
                        "start": {
                          "type": "ValueList",
                          "id": 1
                        },
                        "limit": {
                          "type": "ValueList",
                          "id": 2
                        },
                        "type": {
                          "type": "Type",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      },
                      "nested": {
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "CLOSED_CLOSED": 1,
                            "CLOSED_OPEN": 2,
                            "OPEN_CLOSED": 3,
                            "OPEN_OPEN": 4
                          }
                        }
                      }
                    },
                    "KeySet": {
                      "fields": {
                        "point": {
                          "rule": "repeated",
                          "type": "ValueList",
                          "id": 1
                        },
                        "range": {
                          "rule": "repeated",
                          "type": "KeyRange",
                          "id": 2
                        },
                        "all": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "ValueList": {
                      "fields": {
                        "value": {
                          "rule": "repeated",
                          "type": "Value",
                          "id": 1
                        }
                      }
                    },
                    "MutationAction": {
                      "fields": {
                        "mod": {
                          "rule": "repeated",
                          "type": "Mod",
                          "id": 1
                        }
                      },
                      "nested": {
                        "InsertArgs": {
                          "fields": {
                            "column": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            },
                            "type": {
                              "rule": "repeated",
                              "type": "google.spanner.v1.Type",
                              "id": 2
                            },
                            "values": {
                              "rule": "repeated",
                              "type": "ValueList",
                              "id": 3
                            }
                          }
                        },
                        "UpdateArgs": {
                          "fields": {
                            "column": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            },
                            "type": {
                              "rule": "repeated",
                              "type": "google.spanner.v1.Type",
                              "id": 2
                            },
                            "values": {
                              "rule": "repeated",
                              "type": "ValueList",
                              "id": 3
                            }
                          }
                        },
                        "Mod": {
                          "fields": {
                            "table": {
                              "type": "string",
                              "id": 1
                            },
                            "insert": {
                              "type": "InsertArgs",
                              "id": 2
                            },
                            "update": {
                              "type": "UpdateArgs",
                              "id": 3
                            },
                            "insertOrUpdate": {
                              "type": "InsertArgs",
                              "id": 4
                            },
                            "replace": {
                              "type": "InsertArgs",
                              "id": 5
                            },
                            "deleteKeys": {
                              "type": "KeySet",
                              "id": 6
                            }
                          }
                        }
                      }
                    },
                    "WriteMutationsAction": {
                      "fields": {
                        "mutation": {
                          "type": "MutationAction",
                          "id": 1
                        }
                      }
                    },
                    "PartitionedUpdateAction": {
                      "oneofs": {
                        "_options": {
                          "oneof": [
                            "options"
                          ]
                        }
                      },
                      "fields": {
                        "options": {
                          "type": "ExecutePartitionedUpdateOptions",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "update": {
                          "type": "QueryAction",
                          "id": 2
                        }
                      },
                      "nested": {
                        "ExecutePartitionedUpdateOptions": {
                          "oneofs": {
                            "_rpcPriority": {
                              "oneof": [
                                "rpcPriority"
                              ]
                            },
                            "_tag": {
                              "oneof": [
                                "tag"
                              ]
                            }
                          },
                          "fields": {
                            "rpcPriority": {
                              "type": "google.spanner.v1.RequestOptions.Priority",
                              "id": 1,
                              "options": {
                                "proto3_optional": true
                              }
                            },
                            "tag": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "proto3_optional": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "StartTransactionAction": {
                      "oneofs": {
                        "_concurrency": {
                          "oneof": [
                            "concurrency"
                          ]
                        },
                        "_executionOptions": {
                          "oneof": [
                            "executionOptions"
                          ]
                        }
                      },
                      "fields": {
                        "concurrency": {
                          "type": "Concurrency",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "table": {
                          "rule": "repeated",
                          "type": "TableMetadata",
                          "id": 2
                        },
                        "transactionSeed": {
                          "type": "string",
                          "id": 3
                        },
                        "executionOptions": {
                          "type": "TransactionExecutionOptions",
                          "id": 4,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "Concurrency": {
                      "oneofs": {
                        "concurrencyMode": {
                          "oneof": [
                            "stalenessSeconds",
                            "minReadTimestampMicros",
                            "maxStalenessSeconds",
                            "exactTimestampMicros",
                            "strong",
                            "batch"
                          ]
                        }
                      },
                      "fields": {
                        "stalenessSeconds": {
                          "type": "double",
                          "id": 1
                        },
                        "minReadTimestampMicros": {
                          "type": "int64",
                          "id": 2
                        },
                        "maxStalenessSeconds": {
                          "type": "double",
                          "id": 3
                        },
                        "exactTimestampMicros": {
                          "type": "int64",
                          "id": 4
                        },
                        "strong": {
                          "type": "bool",
                          "id": 5
                        },
                        "batch": {
                          "type": "bool",
                          "id": 6
                        },
                        "snapshotEpochRead": {
                          "type": "bool",
                          "id": 7
                        },
                        "snapshotEpochRootTable": {
                          "type": "string",
                          "id": 8
                        },
                        "batchReadTimestampMicros": {
                          "type": "int64",
                          "id": 9
                        }
                      }
                    },
                    "TableMetadata": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "column": {
                          "rule": "repeated",
                          "type": "ColumnMetadata",
                          "id": 2
                        },
                        "keyColumn": {
                          "rule": "repeated",
                          "type": "ColumnMetadata",
                          "id": 3
                        }
                      }
                    },
                    "ColumnMetadata": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "type": {
                          "type": "google.spanner.v1.Type",
                          "id": 2
                        }
                      }
                    },
                    "TransactionExecutionOptions": {
                      "fields": {
                        "optimistic": {
                          "type": "bool",
                          "id": 1
                        }
                      }
                    },
                    "FinishTransactionAction": {
                      "fields": {
                        "mode": {
                          "type": "Mode",
                          "id": 1
                        }
                      },
                      "nested": {
                        "Mode": {
                          "values": {
                            "MODE_UNSPECIFIED": 0,
                            "COMMIT": 1,
                            "ABANDON": 2
                          }
                        }
                      }
                    },
                    "AdminAction": {
                      "oneofs": {
                        "action": {
                          "oneof": [
                            "createUserInstanceConfig",
                            "updateUserInstanceConfig",
                            "deleteUserInstanceConfig",
                            "getCloudInstanceConfig",
                            "listInstanceConfigs",
                            "createCloudInstance",
                            "updateCloudInstance",
                            "deleteCloudInstance",
                            "listCloudInstances",
                            "getCloudInstance",
                            "createCloudDatabase",
                            "updateCloudDatabaseDdl",
                            "updateCloudDatabase",
                            "dropCloudDatabase",
                            "listCloudDatabases",
                            "listCloudDatabaseOperations",
                            "restoreCloudDatabase",
                            "getCloudDatabase",
                            "createCloudBackup",
                            "copyCloudBackup",
                            "getCloudBackup",
                            "updateCloudBackup",
                            "deleteCloudBackup",
                            "listCloudBackups",
                            "listCloudBackupOperations",
                            "getOperation",
                            "cancelOperation",
                            "reconfigureCloudDatabase"
                          ]
                        }
                      },
                      "fields": {
                        "createUserInstanceConfig": {
                          "type": "CreateUserInstanceConfigAction",
                          "id": 1
                        },
                        "updateUserInstanceConfig": {
                          "type": "UpdateUserInstanceConfigAction",
                          "id": 2
                        },
                        "deleteUserInstanceConfig": {
                          "type": "DeleteUserInstanceConfigAction",
                          "id": 3
                        },
                        "getCloudInstanceConfig": {
                          "type": "GetCloudInstanceConfigAction",
                          "id": 4
                        },
                        "listInstanceConfigs": {
                          "type": "ListCloudInstanceConfigsAction",
                          "id": 5
                        },
                        "createCloudInstance": {
                          "type": "CreateCloudInstanceAction",
                          "id": 6
                        },
                        "updateCloudInstance": {
                          "type": "UpdateCloudInstanceAction",
                          "id": 7
                        },
                        "deleteCloudInstance": {
                          "type": "DeleteCloudInstanceAction",
                          "id": 8
                        },
                        "listCloudInstances": {
                          "type": "ListCloudInstancesAction",
                          "id": 9
                        },
                        "getCloudInstance": {
                          "type": "GetCloudInstanceAction",
                          "id": 10
                        },
                        "createCloudDatabase": {
                          "type": "CreateCloudDatabaseAction",
                          "id": 11
                        },
                        "updateCloudDatabaseDdl": {
                          "type": "UpdateCloudDatabaseDdlAction",
                          "id": 12
                        },
                        "updateCloudDatabase": {
                          "type": "UpdateCloudDatabaseAction",
                          "id": 27
                        },
                        "dropCloudDatabase": {
                          "type": "DropCloudDatabaseAction",
                          "id": 13
                        },
                        "listCloudDatabases": {
                          "type": "ListCloudDatabasesAction",
                          "id": 14
                        },
                        "listCloudDatabaseOperations": {
                          "type": "ListCloudDatabaseOperationsAction",
                          "id": 15
                        },
                        "restoreCloudDatabase": {
                          "type": "RestoreCloudDatabaseAction",
                          "id": 16
                        },
                        "getCloudDatabase": {
                          "type": "GetCloudDatabaseAction",
                          "id": 17
                        },
                        "createCloudBackup": {
                          "type": "CreateCloudBackupAction",
                          "id": 18
                        },
                        "copyCloudBackup": {
                          "type": "CopyCloudBackupAction",
                          "id": 19
                        },
                        "getCloudBackup": {
                          "type": "GetCloudBackupAction",
                          "id": 20
                        },
                        "updateCloudBackup": {
                          "type": "UpdateCloudBackupAction",
                          "id": 21
                        },
                        "deleteCloudBackup": {
                          "type": "DeleteCloudBackupAction",
                          "id": 22
                        },
                        "listCloudBackups": {
                          "type": "ListCloudBackupsAction",
                          "id": 23
                        },
                        "listCloudBackupOperations": {
                          "type": "ListCloudBackupOperationsAction",
                          "id": 24
                        },
                        "getOperation": {
                          "type": "GetOperationAction",
                          "id": 25
                        },
                        "cancelOperation": {
                          "type": "CancelOperationAction",
                          "id": 26
                        },
                        "reconfigureCloudDatabase": {
                          "type": "ReconfigureCloudDatabaseAction",
                          "id": 28
                        }
                      }
                    },
                    "CreateUserInstanceConfigAction": {
                      "fields": {
                        "userConfigId": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "baseConfigId": {
                          "type": "string",
                          "id": 3
                        },
                        "replicas": {
                          "rule": "repeated",
                          "type": "google.spanner.admin.instance.v1.ReplicaInfo",
                          "id": 4
                        }
                      }
                    },
                    "UpdateUserInstanceConfigAction": {
                      "oneofs": {
                        "_displayName": {
                          "oneof": [
                            "displayName"
                          ]
                        }
                      },
                      "fields": {
                        "userConfigId": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "displayName": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "GetCloudInstanceConfigAction": {
                      "fields": {
                        "instanceConfigId": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteUserInstanceConfigAction": {
                      "fields": {
                        "userConfigId": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListCloudInstanceConfigsAction": {
                      "oneofs": {
                        "_pageSize": {
                          "oneof": [
                            "pageSize"
                          ]
                        },
                        "_pageToken": {
                          "oneof": [
                            "pageToken"
                          ]
                        }
                      },
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "CreateCloudInstanceAction": {
                      "oneofs": {
                        "_nodeCount": {
                          "oneof": [
                            "nodeCount"
                          ]
                        },
                        "_processingUnits": {
                          "oneof": [
                            "processingUnits"
                          ]
                        },
                        "_autoscalingConfig": {
                          "oneof": [
                            "autoscalingConfig"
                          ]
                        }
                      },
                      "fields": {
                        "instanceId": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "instanceConfigId": {
                          "type": "string",
                          "id": 3
                        },
                        "nodeCount": {
                          "type": "int32",
                          "id": 4,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "processingUnits": {
                          "type": "int32",
                          "id": 6,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "autoscalingConfig": {
                          "type": "google.spanner.admin.instance.v1.AutoscalingConfig",
                          "id": 7,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "UpdateCloudInstanceAction": {
                      "oneofs": {
                        "_displayName": {
                          "oneof": [
                            "displayName"
                          ]
                        },
                        "_nodeCount": {
                          "oneof": [
                            "nodeCount"
                          ]
                        },
                        "_processingUnits": {
                          "oneof": [
                            "processingUnits"
                          ]
                        },
                        "_autoscalingConfig": {
                          "oneof": [
                            "autoscalingConfig"
                          ]
                        }
                      },
                      "fields": {
                        "instanceId": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "displayName": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "nodeCount": {
                          "type": "int32",
                          "id": 4,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "processingUnits": {
                          "type": "int32",
                          "id": 5,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "autoscalingConfig": {
                          "type": "google.spanner.admin.instance.v1.AutoscalingConfig",
                          "id": 7,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "DeleteCloudInstanceAction": {
                      "fields": {
                        "instanceId": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "CreateCloudDatabaseAction": {
                      "oneofs": {
                        "_dialect": {
                          "oneof": [
                            "dialect"
                          ]
                        },
                        "_protoDescriptors": {
                          "oneof": [
                            "protoDescriptors"
                          ]
                        }
                      },
                      "fields": {
                        "instanceId": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "databaseId": {
                          "type": "string",
                          "id": 3
                        },
                        "sdlStatement": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 4
                        },
                        "encryptionConfig": {
                          "type": "google.spanner.admin.database.v1.EncryptionConfig",
                          "id": 5
                        },
                        "dialect": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "protoDescriptors": {
                          "type": "bytes",
                          "id": 7,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "UpdateCloudDatabaseDdlAction": {
                      "oneofs": {
                        "_protoDescriptors": {
                          "oneof": [
                            "protoDescriptors"
                          ]
                        }
                      },
                      "fields": {
                        "instanceId": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "databaseId": {
                          "type": "string",
                          "id": 3
                        },
                        "sdlStatement": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 4
                        },
                        "operationId": {
                          "type": "string",
                          "id": 5
                        },
                        "protoDescriptors": {
                          "type": "bytes",
                          "id": 6,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "UpdateCloudDatabaseAction": {
                      "fields": {
                        "instanceId": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "databaseName": {
                          "type": "string",
                          "id": 3
                        },
                        "enableDropProtection": {
                          "type": "bool",
                          "id": 4
                        }
                      }
                    },
                    "DropCloudDatabaseAction": {
                      "fields": {
                        "instanceId": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "databaseId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ReconfigureCloudDatabaseAction": {
                      "oneofs": {
                        "_databaseUri": {
                          "oneof": [
                            "databaseUri"
                          ]
                        }
                      },
                      "fields": {
                        "databaseUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "servingLocations": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListCloudDatabasesAction": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "instanceId": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "ListCloudInstancesAction": {
                      "oneofs": {
                        "_filter": {
                          "oneof": [
                            "filter"
                          ]
                        },
                        "_pageSize": {
                          "oneof": [
                            "pageSize"
                          ]
                        },
                        "_pageToken": {
                          "oneof": [
                            "pageToken"
                          ]
                        }
                      },
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "filter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "GetCloudInstanceAction": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "instanceId": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListCloudDatabaseOperationsAction": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "instanceId": {
                          "type": "string",
                          "id": 2
                        },
                        "filter": {
                          "type": "string",
                          "id": 3
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 4
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "RestoreCloudDatabaseAction": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "backupInstanceId": {
                          "type": "string",
                          "id": 2
                        },
                        "backupId": {
                          "type": "string",
                          "id": 3
                        },
                        "databaseInstanceId": {
                          "type": "string",
                          "id": 4
                        },
                        "databaseId": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "GetCloudDatabaseAction": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "instanceId": {
                          "type": "string",
                          "id": 2
                        },
                        "databaseId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "CreateCloudBackupAction": {
                      "oneofs": {
                        "_versionTime": {
                          "oneof": [
                            "versionTime"
                          ]
                        }
                      },
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "instanceId": {
                          "type": "string",
                          "id": 2
                        },
                        "backupId": {
                          "type": "string",
                          "id": 3
                        },
                        "databaseId": {
                          "type": "string",
                          "id": 4
                        },
                        "expireTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "versionTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "CopyCloudBackupAction": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "instanceId": {
                          "type": "string",
                          "id": 2
                        },
                        "backupId": {
                          "type": "string",
                          "id": 3
                        },
                        "sourceBackup": {
                          "type": "string",
                          "id": 4
                        },
                        "expireTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "GetCloudBackupAction": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "instanceId": {
                          "type": "string",
                          "id": 2
                        },
                        "backupId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "UpdateCloudBackupAction": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "instanceId": {
                          "type": "string",
                          "id": 2
                        },
                        "backupId": {
                          "type": "string",
                          "id": 3
                        },
                        "expireTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "DeleteCloudBackupAction": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "instanceId": {
                          "type": "string",
                          "id": 2
                        },
                        "backupId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListCloudBackupsAction": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "instanceId": {
                          "type": "string",
                          "id": 2
                        },
                        "filter": {
                          "type": "string",
                          "id": 3
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 4
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListCloudBackupOperationsAction": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "instanceId": {
                          "type": "string",
                          "id": 2
                        },
                        "filter": {
                          "type": "string",
                          "id": 3
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 4
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "GetOperationAction": {
                      "fields": {
                        "operation": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "CancelOperationAction": {
                      "fields": {
                        "operation": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "StartBatchTransactionAction": {
                      "oneofs": {
                        "param": {
                          "oneof": [
                            "batchTxnTime",
                            "tid"
                          ]
                        }
                      },
                      "fields": {
                        "batchTxnTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "tid": {
                          "type": "bytes",
                          "id": 2
                        },
                        "cloudDatabaseRole": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "CloseBatchTransactionAction": {
                      "fields": {
                        "cleanup": {
                          "type": "bool",
                          "id": 1
                        }
                      }
                    },
                    "GenerateDbPartitionsForReadAction": {
                      "oneofs": {
                        "_desiredBytesPerPartition": {
                          "oneof": [
                            "desiredBytesPerPartition"
                          ]
                        },
                        "_maxPartitionCount": {
                          "oneof": [
                            "maxPartitionCount"
                          ]
                        }
                      },
                      "fields": {
                        "read": {
                          "type": "ReadAction",
                          "id": 1
                        },
                        "table": {
                          "rule": "repeated",
                          "type": "TableMetadata",
                          "id": 2
                        },
                        "desiredBytesPerPartition": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "maxPartitionCount": {
                          "type": "int64",
                          "id": 4,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "GenerateDbPartitionsForQueryAction": {
                      "oneofs": {
                        "_desiredBytesPerPartition": {
                          "oneof": [
                            "desiredBytesPerPartition"
                          ]
                        }
                      },
                      "fields": {
                        "query": {
                          "type": "QueryAction",
                          "id": 1
                        },
                        "desiredBytesPerPartition": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "BatchPartition": {
                      "oneofs": {
                        "_table": {
                          "oneof": [
                            "table"
                          ]
                        },
                        "_index": {
                          "oneof": [
                            "index"
                          ]
                        }
                      },
                      "fields": {
                        "partition": {
                          "type": "bytes",
                          "id": 1
                        },
                        "partitionToken": {
                          "type": "bytes",
                          "id": 2
                        },
                        "table": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "index": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "ExecutePartitionAction": {
                      "fields": {
                        "partition": {
                          "type": "BatchPartition",
                          "id": 1
                        }
                      }
                    },
                    "ExecuteChangeStreamQuery": {
                      "oneofs": {
                        "_endTime": {
                          "oneof": [
                            "endTime"
                          ]
                        },
                        "_partitionToken": {
                          "oneof": [
                            "partitionToken"
                          ]
                        },
                        "_heartbeatMilliseconds": {
                          "oneof": [
                            "heartbeatMilliseconds"
                          ]
                        },
                        "_deadlineSeconds": {
                          "oneof": [
                            "deadlineSeconds"
                          ]
                        },
                        "_cloudDatabaseRole": {
                          "oneof": [
                            "cloudDatabaseRole"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "partitionToken": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "readOptions": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5
                        },
                        "heartbeatMilliseconds": {
                          "type": "int32",
                          "id": 6,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "deadlineSeconds": {
                          "type": "int64",
                          "id": 7,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "cloudDatabaseRole": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "SpannerActionOutcome": {
                      "oneofs": {
                        "_status": {
                          "oneof": [
                            "status"
                          ]
                        },
                        "_commitTime": {
                          "oneof": [
                            "commitTime"
                          ]
                        },
                        "_readResult": {
                          "oneof": [
                            "readResult"
                          ]
                        },
                        "_queryResult": {
                          "oneof": [
                            "queryResult"
                          ]
                        },
                        "_transactionRestarted": {
                          "oneof": [
                            "transactionRestarted"
                          ]
                        },
                        "_batchTxnId": {
                          "oneof": [
                            "batchTxnId"
                          ]
                        },
                        "_adminResult": {
                          "oneof": [
                            "adminResult"
                          ]
                        }
                      },
                      "fields": {
                        "status": {
                          "type": "google.rpc.Status",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "commitTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "readResult": {
                          "type": "ReadResult",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "queryResult": {
                          "type": "QueryResult",
                          "id": 4,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "transactionRestarted": {
                          "type": "bool",
                          "id": 5,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "batchTxnId": {
                          "type": "bytes",
                          "id": 6,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "dbPartition": {
                          "rule": "repeated",
                          "type": "BatchPartition",
                          "id": 7
                        },
                        "adminResult": {
                          "type": "AdminResult",
                          "id": 8,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "dmlRowsModified": {
                          "rule": "repeated",
                          "type": "int64",
                          "id": 9
                        },
                        "changeStreamRecords": {
                          "rule": "repeated",
                          "type": "ChangeStreamRecord",
                          "id": 10
                        }
                      }
                    },
                    "AdminResult": {
                      "fields": {
                        "backupResponse": {
                          "type": "CloudBackupResponse",
                          "id": 1
                        },
                        "operationResponse": {
                          "type": "OperationResponse",
                          "id": 2
                        },
                        "databaseResponse": {
                          "type": "CloudDatabaseResponse",
                          "id": 3
                        },
                        "instanceResponse": {
                          "type": "CloudInstanceResponse",
                          "id": 4
                        },
                        "instanceConfigResponse": {
                          "type": "CloudInstanceConfigResponse",
                          "id": 5
                        }
                      }
                    },
                    "CloudBackupResponse": {
                      "fields": {
                        "listedBackups": {
                          "rule": "repeated",
                          "type": "google.spanner.admin.database.v1.Backup",
                          "id": 1
                        },
                        "listedBackupOperations": {
                          "rule": "repeated",
                          "type": "google.longrunning.Operation",
                          "id": 2
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "backup": {
                          "type": "google.spanner.admin.database.v1.Backup",
                          "id": 4
                        }
                      }
                    },
                    "OperationResponse": {
                      "fields": {
                        "listedOperations": {
                          "rule": "repeated",
                          "type": "google.longrunning.Operation",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "operation": {
                          "type": "google.longrunning.Operation",
                          "id": 3
                        }
                      }
                    },
                    "CloudInstanceResponse": {
                      "fields": {
                        "listedInstances": {
                          "rule": "repeated",
                          "type": "google.spanner.admin.instance.v1.Instance",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "instance": {
                          "type": "google.spanner.admin.instance.v1.Instance",
                          "id": 3
                        }
                      }
                    },
                    "CloudInstanceConfigResponse": {
                      "fields": {
                        "listedInstanceConfigs": {
                          "rule": "repeated",
                          "type": "google.spanner.admin.instance.v1.InstanceConfig",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "instanceConfig": {
                          "type": "google.spanner.admin.instance.v1.InstanceConfig",
                          "id": 3
                        }
                      }
                    },
                    "CloudDatabaseResponse": {
                      "fields": {
                        "listedDatabases": {
                          "rule": "repeated",
                          "type": "google.spanner.admin.database.v1.Database",
                          "id": 1
                        },
                        "listedDatabaseOperations": {
                          "rule": "repeated",
                          "type": "google.longrunning.Operation",
                          "id": 2
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "database": {
                          "type": "google.spanner.admin.database.v1.Database",
                          "id": 4
                        }
                      }
                    },
                    "ReadResult": {
                      "oneofs": {
                        "_index": {
                          "oneof": [
                            "index"
                          ]
                        },
                        "_requestIndex": {
                          "oneof": [
                            "requestIndex"
                          ]
                        },
                        "_rowType": {
                          "oneof": [
                            "rowType"
                          ]
                        }
                      },
                      "fields": {
                        "table": {
                          "type": "string",
                          "id": 1
                        },
                        "index": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "requestIndex": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "row": {
                          "rule": "repeated",
                          "type": "ValueList",
                          "id": 4
                        },
                        "rowType": {
                          "type": "google.spanner.v1.StructType",
                          "id": 5,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "QueryResult": {
                      "oneofs": {
                        "_rowType": {
                          "oneof": [
                            "rowType"
                          ]
                        }
                      },
                      "fields": {
                        "row": {
                          "rule": "repeated",
                          "type": "ValueList",
                          "id": 1
                        },
                        "rowType": {
                          "type": "google.spanner.v1.StructType",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "ChangeStreamRecord": {
                      "oneofs": {
                        "record": {
                          "oneof": [
                            "dataChange",
                            "childPartition",
                            "heartbeat"
                          ]
                        }
                      },
                      "fields": {
                        "dataChange": {
                          "type": "DataChangeRecord",
                          "id": 1
                        },
                        "childPartition": {
                          "type": "ChildPartitionsRecord",
                          "id": 2
                        },
                        "heartbeat": {
                          "type": "HeartbeatRecord",
                          "id": 3
                        }
                      }
                    },
                    "DataChangeRecord": {
                      "fields": {
                        "commitTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "recordSequence": {
                          "type": "string",
                          "id": 2
                        },
                        "transactionId": {
                          "type": "string",
                          "id": 3
                        },
                        "isLastRecord": {
                          "type": "bool",
                          "id": 4
                        },
                        "table": {
                          "type": "string",
                          "id": 5
                        },
                        "columnTypes": {
                          "rule": "repeated",
                          "type": "ColumnType",
                          "id": 6
                        },
                        "mods": {
                          "rule": "repeated",
                          "type": "Mod",
                          "id": 7
                        },
                        "modType": {
                          "type": "string",
                          "id": 8
                        },
                        "valueCaptureType": {
                          "type": "string",
                          "id": 9
                        },
                        "recordCount": {
                          "type": "int64",
                          "id": 10
                        },
                        "partitionCount": {
                          "type": "int64",
                          "id": 11
                        },
                        "transactionTag": {
                          "type": "string",
                          "id": 12
                        },
                        "isSystemTransaction": {
                          "type": "bool",
                          "id": 13
                        }
                      },
                      "nested": {
                        "ColumnType": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "type": {
                              "type": "string",
                              "id": 2
                            },
                            "isPrimaryKey": {
                              "type": "bool",
                              "id": 3
                            },
                            "ordinalPosition": {
                              "type": "int64",
                              "id": 4
                            }
                          }
                        },
                        "Mod": {
                          "fields": {
                            "keys": {
                              "type": "string",
                              "id": 1
                            },
                            "newValues": {
                              "type": "string",
                              "id": 2
                            },
                            "oldValues": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "ChildPartitionsRecord": {
                      "fields": {
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "recordSequence": {
                          "type": "string",
                          "id": 2
                        },
                        "childPartitions": {
                          "rule": "repeated",
                          "type": "ChildPartition",
                          "id": 3
                        }
                      },
                      "nested": {
                        "ChildPartition": {
                          "fields": {
                            "token": {
                              "type": "string",
                              "id": 1
                            },
                            "parentPartitionTokens": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "HeartbeatRecord": {
                      "fields": {
                        "heartbeatTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        }
                      }
                    }
                  }
                }
              }
            },
            "v1": {
              "options": {
                "csharp_namespace": "Google.Cloud.Spanner.V1",
                "go_package": "cloud.google.com/go/spanner/apiv1/spannerpb;spannerpb",
                "java_multiple_files": true,
                "java_outer_classname": "TypeProto",
                "java_package": "com.google.spanner.v1",
                "php_namespace": "Google\\Cloud\\Spanner\\V1",
                "ruby_package": "Google::Cloud::Spanner::V1",
                "(google.api.resource_definition).type": "spanner.googleapis.com/Database",
                "(google.api.resource_definition).pattern": "projects/{project}/instances/{instance}/databases/{database}",
                "cc_enable_arenas": true
              },
              "nested": {
                "Spanner": {
                  "options": {
                    "(google.api.default_host)": "spanner.googleapis.com",
                    "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/spanner.data"
                  },
                  "methods": {
                    "CreateSession": {
                      "requestType": "CreateSessionRequest",
                      "responseType": "Session",
                      "options": {
                        "(google.api.http).post": "/v1/{database=projects/*/instances/*/databases/*}/sessions",
                        "(google.api.http).body": "*",
                        "(google.api.method_signature)": "database"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{database=projects/*/instances/*/databases/*}/sessions",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.method_signature)": "database"
                        }
                      ]
                    },
                    "BatchCreateSessions": {
                      "requestType": "BatchCreateSessionsRequest",
                      "responseType": "BatchCreateSessionsResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{database=projects/*/instances/*/databases/*}/sessions:batchCreate",
                        "(google.api.http).body": "*",
                        "(google.api.method_signature)": "database,session_count"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{database=projects/*/instances/*/databases/*}/sessions:batchCreate",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.method_signature)": "database,session_count"
                        }
                      ]
                    },
                    "GetSession": {
                      "requestType": "GetSessionRequest",
                      "responseType": "Session",
                      "options": {
                        "(google.api.http).get": "/v1/{name=projects/*/instances/*/databases/*/sessions/*}",
                        "(google.api.method_signature)": "name"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "get": "/v1/{name=projects/*/instances/*/databases/*/sessions/*}"
                          }
                        },
                        {
                          "(google.api.method_signature)": "name"
                        }
                      ]
                    },
                    "ListSessions": {
                      "requestType": "ListSessionsRequest",
                      "responseType": "ListSessionsResponse",
                      "options": {
                        "(google.api.http).get": "/v1/{database=projects/*/instances/*/databases/*}/sessions",
                        "(google.api.method_signature)": "database"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "get": "/v1/{database=projects/*/instances/*/databases/*}/sessions"
                          }
                        },
                        {
                          "(google.api.method_signature)": "database"
                        }
                      ]
                    },
                    "DeleteSession": {
                      "requestType": "DeleteSessionRequest",
                      "responseType": "google.protobuf.Empty",
                      "options": {
                        "(google.api.http).delete": "/v1/{name=projects/*/instances/*/databases/*/sessions/*}",
                        "(google.api.method_signature)": "name"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "delete": "/v1/{name=projects/*/instances/*/databases/*/sessions/*}"
                          }
                        },
                        {
                          "(google.api.method_signature)": "name"
                        }
                      ]
                    },
                    "ExecuteSql": {
                      "requestType": "ExecuteSqlRequest",
                      "responseType": "ResultSet",
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:executeSql",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:executeSql",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "ExecuteStreamingSql": {
                      "requestType": "ExecuteSqlRequest",
                      "responseType": "PartialResultSet",
                      "responseStream": true,
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:executeStreamingSql",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:executeStreamingSql",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "ExecuteBatchDml": {
                      "requestType": "ExecuteBatchDmlRequest",
                      "responseType": "ExecuteBatchDmlResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:executeBatchDml",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:executeBatchDml",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "Read": {
                      "requestType": "ReadRequest",
                      "responseType": "ResultSet",
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:read",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:read",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "StreamingRead": {
                      "requestType": "ReadRequest",
                      "responseType": "PartialResultSet",
                      "responseStream": true,
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:streamingRead",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:streamingRead",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "BeginTransaction": {
                      "requestType": "BeginTransactionRequest",
                      "responseType": "Transaction",
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:beginTransaction",
                        "(google.api.http).body": "*",
                        "(google.api.method_signature)": "session,options"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:beginTransaction",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.method_signature)": "session,options"
                        }
                      ]
                    },
                    "Commit": {
                      "requestType": "CommitRequest",
                      "responseType": "CommitResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:commit",
                        "(google.api.http).body": "*",
                        "(google.api.method_signature)": "session,single_use_transaction,mutations"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:commit",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.method_signature)": "session,transaction_id,mutations"
                        },
                        {
                          "(google.api.method_signature)": "session,single_use_transaction,mutations"
                        }
                      ]
                    },
                    "Rollback": {
                      "requestType": "RollbackRequest",
                      "responseType": "google.protobuf.Empty",
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:rollback",
                        "(google.api.http).body": "*",
                        "(google.api.method_signature)": "session,transaction_id"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:rollback",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.method_signature)": "session,transaction_id"
                        }
                      ]
                    },
                    "PartitionQuery": {
                      "requestType": "PartitionQueryRequest",
                      "responseType": "PartitionResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:partitionQuery",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:partitionQuery",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "PartitionRead": {
                      "requestType": "PartitionReadRequest",
                      "responseType": "PartitionResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:partitionRead",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:partitionRead",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "BatchWrite": {
                      "requestType": "BatchWriteRequest",
                      "responseType": "BatchWriteResponse",
                      "responseStream": true,
                      "options": {
                        "(google.api.http).post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:batchWrite",
                        "(google.api.http).body": "*",
                        "(google.api.method_signature)": "session,mutation_groups"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{session=projects/*/instances/*/databases/*/sessions/*}:batchWrite",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.method_signature)": "session,mutation_groups"
                        }
                      ]
                    }
                  }
                },
                "CreateSessionRequest": {
                  "fields": {
                    "database": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                      }
                    },
                    "session": {
                      "type": "Session",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                },
                "BatchCreateSessionsRequest": {
                  "fields": {
                    "database": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                      }
                    },
                    "sessionTemplate": {
                      "type": "Session",
                      "id": 2
                    },
                    "sessionCount": {
                      "type": "int32",
                      "id": 3,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                },
                "BatchCreateSessionsResponse": {
                  "fields": {
                    "session": {
                      "rule": "repeated",
                      "type": "Session",
                      "id": 1
                    }
                  }
                },
                "Session": {
                  "options": {
                    "(google.api.resource).type": "spanner.googleapis.com/Session",
                    "(google.api.resource).pattern": "projects/{project}/instances/{instance}/databases/{database}/sessions/{session}"
                  },
                  "fields": {
                    "name": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "OUTPUT_ONLY"
                      }
                    },
                    "labels": {
                      "keyType": "string",
                      "type": "string",
                      "id": 2
                    },
                    "createTime": {
                      "type": "google.protobuf.Timestamp",
                      "id": 3,
                      "options": {
                        "(google.api.field_behavior)": "OUTPUT_ONLY"
                      }
                    },
                    "approximateLastUseTime": {
                      "type": "google.protobuf.Timestamp",
                      "id": 4,
                      "options": {
                        "(google.api.field_behavior)": "OUTPUT_ONLY"
                      }
                    },
                    "creatorRole": {
                      "type": "string",
                      "id": 5
                    },
                    "multiplexed": {
                      "type": "bool",
                      "id": 6,
                      "options": {
                        "(google.api.field_behavior)": "OPTIONAL"
                      }
                    }
                  }
                },
                "GetSessionRequest": {
                  "fields": {
                    "name": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    }
                  }
                },
                "ListSessionsRequest": {
                  "fields": {
                    "database": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Database"
                      }
                    },
                    "pageSize": {
                      "type": "int32",
                      "id": 2
                    },
                    "pageToken": {
                      "type": "string",
                      "id": 3
                    },
                    "filter": {
                      "type": "string",
                      "id": 4
                    }
                  }
                },
                "ListSessionsResponse": {
                  "fields": {
                    "sessions": {
                      "rule": "repeated",
                      "type": "Session",
                      "id": 1
                    },
                    "nextPageToken": {
                      "type": "string",
                      "id": 2
                    }
                  }
                },
                "DeleteSessionRequest": {
                  "fields": {
                    "name": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    }
                  }
                },
                "RequestOptions": {
                  "fields": {
                    "priority": {
                      "type": "Priority",
                      "id": 1
                    },
                    "requestTag": {
                      "type": "string",
                      "id": 2
                    },
                    "transactionTag": {
                      "type": "string",
                      "id": 3
                    }
                  },
                  "nested": {
                    "Priority": {
                      "values": {
                        "PRIORITY_UNSPECIFIED": 0,
                        "PRIORITY_LOW": 1,
                        "PRIORITY_MEDIUM": 2,
                        "PRIORITY_HIGH": 3
                      }
                    }
                  }
                },
                "DirectedReadOptions": {
                  "oneofs": {
                    "replicas": {
                      "oneof": [
                        "includeReplicas",
                        "excludeReplicas"
                      ]
                    }
                  },
                  "fields": {
                    "includeReplicas": {
                      "type": "IncludeReplicas",
                      "id": 1
                    },
                    "excludeReplicas": {
                      "type": "ExcludeReplicas",
                      "id": 2
                    }
                  },
                  "nested": {
                    "ReplicaSelection": {
                      "fields": {
                        "location": {
                          "type": "string",
                          "id": 1
                        },
                        "type": {
                          "type": "Type",
                          "id": 2
                        }
                      },
                      "nested": {
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "READ_WRITE": 1,
                            "READ_ONLY": 2
                          }
                        }
                      }
                    },
                    "IncludeReplicas": {
                      "fields": {
                        "replicaSelections": {
                          "rule": "repeated",
                          "type": "ReplicaSelection",
                          "id": 1
                        },
                        "autoFailoverDisabled": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "ExcludeReplicas": {
                      "fields": {
                        "replicaSelections": {
                          "rule": "repeated",
                          "type": "ReplicaSelection",
                          "id": 1
                        }
                      }
                    }
                  }
                },
                "ExecuteSqlRequest": {
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "transaction": {
                      "type": "TransactionSelector",
                      "id": 2
                    },
                    "sql": {
                      "type": "string",
                      "id": 3,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "params": {
                      "type": "google.protobuf.Struct",
                      "id": 4
                    },
                    "paramTypes": {
                      "keyType": "string",
                      "type": "Type",
                      "id": 5
                    },
                    "resumeToken": {
                      "type": "bytes",
                      "id": 6
                    },
                    "queryMode": {
                      "type": "QueryMode",
                      "id": 7
                    },
                    "partitionToken": {
                      "type": "bytes",
                      "id": 8
                    },
                    "seqno": {
                      "type": "int64",
                      "id": 9
                    },
                    "queryOptions": {
                      "type": "QueryOptions",
                      "id": 10
                    },
                    "requestOptions": {
                      "type": "RequestOptions",
                      "id": 11
                    },
                    "directedReadOptions": {
                      "type": "DirectedReadOptions",
                      "id": 15
                    },
                    "dataBoostEnabled": {
                      "type": "bool",
                      "id": 16
                    }
                  },
                  "nested": {
                    "QueryMode": {
                      "values": {
                        "NORMAL": 0,
                        "PLAN": 1,
                        "PROFILE": 2
                      }
                    },
                    "QueryOptions": {
                      "fields": {
                        "optimizerVersion": {
                          "type": "string",
                          "id": 1
                        },
                        "optimizerStatisticsPackage": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    }
                  }
                },
                "ExecuteBatchDmlRequest": {
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "transaction": {
                      "type": "TransactionSelector",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "statements": {
                      "rule": "repeated",
                      "type": "Statement",
                      "id": 3,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "seqno": {
                      "type": "int64",
                      "id": 4,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "requestOptions": {
                      "type": "RequestOptions",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Statement": {
                      "fields": {
                        "sql": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "params": {
                          "type": "google.protobuf.Struct",
                          "id": 2
                        },
                        "paramTypes": {
                          "keyType": "string",
                          "type": "Type",
                          "id": 3
                        }
                      }
                    }
                  }
                },
                "ExecuteBatchDmlResponse": {
                  "fields": {
                    "resultSets": {
                      "rule": "repeated",
                      "type": "ResultSet",
                      "id": 1
                    },
                    "status": {
                      "type": "google.rpc.Status",
                      "id": 2
                    }
                  }
                },
                "PartitionOptions": {
                  "fields": {
                    "partitionSizeBytes": {
                      "type": "int64",
                      "id": 1
                    },
                    "maxPartitions": {
                      "type": "int64",
                      "id": 2
                    }
                  }
                },
                "PartitionQueryRequest": {
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "transaction": {
                      "type": "TransactionSelector",
                      "id": 2
                    },
                    "sql": {
                      "type": "string",
                      "id": 3,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "params": {
                      "type": "google.protobuf.Struct",
                      "id": 4
                    },
                    "paramTypes": {
                      "keyType": "string",
                      "type": "Type",
                      "id": 5
                    },
                    "partitionOptions": {
                      "type": "PartitionOptions",
                      "id": 6
                    }
                  }
                },
                "PartitionReadRequest": {
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "transaction": {
                      "type": "TransactionSelector",
                      "id": 2
                    },
                    "table": {
                      "type": "string",
                      "id": 3,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "index": {
                      "type": "string",
                      "id": 4
                    },
                    "columns": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 5
                    },
                    "keySet": {
                      "type": "KeySet",
                      "id": 6,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "partitionOptions": {
                      "type": "PartitionOptions",
                      "id": 9
                    }
                  }
                },
                "Partition": {
                  "fields": {
                    "partitionToken": {
                      "type": "bytes",
                      "id": 1
                    }
                  }
                },
                "PartitionResponse": {
                  "fields": {
                    "partitions": {
                      "rule": "repeated",
                      "type": "Partition",
                      "id": 1
                    },
                    "transaction": {
                      "type": "Transaction",
                      "id": 2
                    }
                  }
                },
                "ReadRequest": {
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "transaction": {
                      "type": "TransactionSelector",
                      "id": 2
                    },
                    "table": {
                      "type": "string",
                      "id": 3,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "index": {
                      "type": "string",
                      "id": 4
                    },
                    "columns": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 5,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "keySet": {
                      "type": "KeySet",
                      "id": 6,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "limit": {
                      "type": "int64",
                      "id": 8
                    },
                    "resumeToken": {
                      "type": "bytes",
                      "id": 9
                    },
                    "partitionToken": {
                      "type": "bytes",
                      "id": 10
                    },
                    "requestOptions": {
                      "type": "RequestOptions",
                      "id": 11
                    },
                    "directedReadOptions": {
                      "type": "DirectedReadOptions",
                      "id": 14
                    },
                    "dataBoostEnabled": {
                      "type": "bool",
                      "id": 15
                    }
                  }
                },
                "BeginTransactionRequest": {
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "options": {
                      "type": "TransactionOptions",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "requestOptions": {
                      "type": "RequestOptions",
                      "id": 3
                    }
                  }
                },
                "CommitRequest": {
                  "oneofs": {
                    "transaction": {
                      "oneof": [
                        "transactionId",
                        "singleUseTransaction"
                      ]
                    }
                  },
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "transactionId": {
                      "type": "bytes",
                      "id": 2
                    },
                    "singleUseTransaction": {
                      "type": "TransactionOptions",
                      "id": 3
                    },
                    "mutations": {
                      "rule": "repeated",
                      "type": "Mutation",
                      "id": 4
                    },
                    "returnCommitStats": {
                      "type": "bool",
                      "id": 5
                    },
                    "maxCommitDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 8,
                      "options": {
                        "(google.api.field_behavior)": "OPTIONAL"
                      }
                    },
                    "requestOptions": {
                      "type": "RequestOptions",
                      "id": 6
                    }
                  }
                },
                "RollbackRequest": {
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "transactionId": {
                      "type": "bytes",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                },
                "BatchWriteRequest": {
                  "fields": {
                    "session": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "spanner.googleapis.com/Session"
                      }
                    },
                    "requestOptions": {
                      "type": "RequestOptions",
                      "id": 3
                    },
                    "mutationGroups": {
                      "rule": "repeated",
                      "type": "MutationGroup",
                      "id": 4,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "excludeTxnFromChangeStreams": {
                      "type": "bool",
                      "id": 5,
                      "options": {
                        "(google.api.field_behavior)": "OPTIONAL"
                      }
                    }
                  },
                  "nested": {
                    "MutationGroup": {
                      "fields": {
                        "mutations": {
                          "rule": "repeated",
                          "type": "Mutation",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    }
                  }
                },
                "BatchWriteResponse": {
                  "fields": {
                    "indexes": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "status": {
                      "type": "google.rpc.Status",
                      "id": 2
                    },
                    "commitTimestamp": {
                      "type": "google.protobuf.Timestamp",
                      "id": 3
                    }
                  }
                },
                "CommitResponse": {
                  "fields": {
                    "commitTimestamp": {
                      "type": "google.protobuf.Timestamp",
                      "id": 1
                    },
                    "commitStats": {
                      "type": "CommitStats",
                      "id": 2
                    }
                  },
                  "nested": {
                    "CommitStats": {
                      "fields": {
                        "mutationCount": {
                          "type": "int64",
                          "id": 1
                        }
                      }
                    }
                  }
                },
                "KeyRange": {
                  "oneofs": {
                    "startKeyType": {
                      "oneof": [
                        "startClosed",
                        "startOpen"
                      ]
                    },
                    "endKeyType": {
                      "oneof": [
                        "endClosed",
                        "endOpen"
                      ]
                    }
                  },
                  "fields": {
                    "startClosed": {
                      "type": "google.protobuf.ListValue",
                      "id": 1
                    },
                    "startOpen": {
                      "type": "google.protobuf.ListValue",
                      "id": 2
                    },
                    "endClosed": {
                      "type": "google.protobuf.ListValue",
                      "id": 3
                    },
                    "endOpen": {
                      "type": "google.protobuf.ListValue",
                      "id": 4
                    }
                  }
                },
                "KeySet": {
                  "fields": {
                    "keys": {
                      "rule": "repeated",
                      "type": "google.protobuf.ListValue",
                      "id": 1
                    },
                    "ranges": {
                      "rule": "repeated",
                      "type": "KeyRange",
                      "id": 2
                    },
                    "all": {
                      "type": "bool",
                      "id": 3
                    }
                  }
                },
                "Mutation": {
                  "oneofs": {
                    "operation": {
                      "oneof": [
                        "insert",
                        "update",
                        "insertOrUpdate",
                        "replace",
                        "delete"
                      ]
                    }
                  },
                  "fields": {
                    "insert": {
                      "type": "Write",
                      "id": 1
                    },
                    "update": {
                      "type": "Write",
                      "id": 2
                    },
                    "insertOrUpdate": {
                      "type": "Write",
                      "id": 3
                    },
                    "replace": {
                      "type": "Write",
                      "id": 4
                    },
                    "delete": {
                      "type": "Delete",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Write": {
                      "fields": {
                        "table": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "columns": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "values": {
                          "rule": "repeated",
                          "type": "google.protobuf.ListValue",
                          "id": 3
                        }
                      }
                    },
                    "Delete": {
                      "fields": {
                        "table": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "keySet": {
                          "type": "KeySet",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    }
                  }
                },
                "ResultSet": {
                  "fields": {
                    "metadata": {
                      "type": "ResultSetMetadata",
                      "id": 1
                    },
                    "rows": {
                      "rule": "repeated",
                      "type": "google.protobuf.ListValue",
                      "id": 2
                    },
                    "stats": {
                      "type": "ResultSetStats",
                      "id": 3
                    }
                  }
                },
                "PartialResultSet": {
                  "fields": {
                    "metadata": {
                      "type": "ResultSetMetadata",
                      "id": 1
                    },
                    "values": {
                      "rule": "repeated",
                      "type": "google.protobuf.Value",
                      "id": 2
                    },
                    "chunkedValue": {
                      "type": "bool",
                      "id": 3
                    },
                    "resumeToken": {
                      "type": "bytes",
                      "id": 4
                    },
                    "stats": {
                      "type": "ResultSetStats",
                      "id": 5
                    }
                  }
                },
                "ResultSetMetadata": {
                  "fields": {
                    "rowType": {
                      "type": "StructType",
                      "id": 1
                    },
                    "transaction": {
                      "type": "Transaction",
                      "id": 2
                    },
                    "undeclaredParameters": {
                      "type": "StructType",
                      "id": 3
                    }
                  }
                },
                "ResultSetStats": {
                  "oneofs": {
                    "rowCount": {
                      "oneof": [
                        "rowCountExact",
                        "rowCountLowerBound"
                      ]
                    }
                  },
                  "fields": {
                    "queryPlan": {
                      "type": "QueryPlan",
                      "id": 1
                    },
                    "queryStats": {
                      "type": "google.protobuf.Struct",
                      "id": 2
                    },
                    "rowCountExact": {
                      "type": "int64",
                      "id": 3
                    },
                    "rowCountLowerBound": {
                      "type": "int64",
                      "id": 4
                    }
                  }
                },
                "PlanNode": {
                  "fields": {
                    "index": {
                      "type": "int32",
                      "id": 1
                    },
                    "kind": {
                      "type": "Kind",
                      "id": 2
                    },
                    "displayName": {
                      "type": "string",
                      "id": 3
                    },
                    "childLinks": {
                      "rule": "repeated",
                      "type": "ChildLink",
                      "id": 4
                    },
                    "shortRepresentation": {
                      "type": "ShortRepresentation",
                      "id": 5
                    },
                    "metadata": {
                      "type": "google.protobuf.Struct",
                      "id": 6
                    },
                    "executionStats": {
                      "type": "google.protobuf.Struct",
                      "id": 7
                    }
                  },
                  "nested": {
                    "Kind": {
                      "values": {
                        "KIND_UNSPECIFIED": 0,
                        "RELATIONAL": 1,
                        "SCALAR": 2
                      }
                    },
                    "ChildLink": {
                      "fields": {
                        "childIndex": {
                          "type": "int32",
                          "id": 1
                        },
                        "type": {
                          "type": "string",
                          "id": 2
                        },
                        "variable": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ShortRepresentation": {
                      "fields": {
                        "description": {
                          "type": "string",
                          "id": 1
                        },
                        "subqueries": {
                          "keyType": "string",
                          "type": "int32",
                          "id": 2
                        }
                      }
                    }
                  }
                },
                "QueryPlan": {
                  "fields": {
                    "planNodes": {
                      "rule": "repeated",
                      "type": "PlanNode",
                      "id": 1
                    }
                  }
                },
                "TransactionOptions": {
                  "oneofs": {
                    "mode": {
                      "oneof": [
                        "readWrite",
                        "partitionedDml",
                        "readOnly"
                      ]
                    }
                  },
                  "fields": {
                    "readWrite": {
                      "type": "ReadWrite",
                      "id": 1
                    },
                    "partitionedDml": {
                      "type": "PartitionedDml",
                      "id": 3
                    },
                    "readOnly": {
                      "type": "ReadOnly",
                      "id": 2
                    },
                    "excludeTxnFromChangeStreams": {
                      "type": "bool",
                      "id": 5
                    }
                  },
                  "nested": {
                    "ReadWrite": {
                      "fields": {
                        "readLockMode": {
                          "type": "ReadLockMode",
                          "id": 1
                        }
                      },
                      "nested": {
                        "ReadLockMode": {
                          "values": {
                            "READ_LOCK_MODE_UNSPECIFIED": 0,
                            "PESSIMISTIC": 1,
                            "OPTIMISTIC": 2
                          }
                        }
                      }
                    },
                    "PartitionedDml": {
                      "fields": {}
                    },
                    "ReadOnly": {
                      "oneofs": {
                        "timestampBound": {
                          "oneof": [
                            "strong",
                            "minReadTimestamp",
                            "maxStaleness",
                            "readTimestamp",
                            "exactStaleness"
                          ]
                        }
                      },
                      "fields": {
                        "strong": {
                          "type": "bool",
                          "id": 1
                        },
                        "minReadTimestamp": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "maxStaleness": {
                          "type": "google.protobuf.Duration",
                          "id": 3
                        },
                        "readTimestamp": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4
                        },
                        "exactStaleness": {
                          "type": "google.protobuf.Duration",
                          "id": 5
                        },
                        "returnReadTimestamp": {
                          "type": "bool",
                          "id": 6
                        }
                      }
                    }
                  }
                },
                "Transaction": {
                  "fields": {
                    "id": {
                      "type": "bytes",
                      "id": 1
                    },
                    "readTimestamp": {
                      "type": "google.protobuf.Timestamp",
                      "id": 2
                    }
                  }
                },
                "TransactionSelector": {
                  "oneofs": {
                    "selector": {
                      "oneof": [
                        "singleUse",
                        "id",
                        "begin"
                      ]
                    }
                  },
                  "fields": {
                    "singleUse": {
                      "type": "TransactionOptions",
                      "id": 1
                    },
                    "id": {
                      "type": "bytes",
                      "id": 2
                    },
                    "begin": {
                      "type": "TransactionOptions",
                      "id": 3
                    }
                  }
                },
                "Type": {
                  "fields": {
                    "code": {
                      "type": "TypeCode",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "arrayElementType": {
                      "type": "Type",
                      "id": 2
                    },
                    "structType": {
                      "type": "StructType",
                      "id": 3
                    },
                    "typeAnnotation": {
                      "type": "TypeAnnotationCode",
                      "id": 4
                    },
                    "protoTypeFqn": {
                      "type": "string",
                      "id": 5
                    }
                  }
                },
                "StructType": {
                  "fields": {
                    "fields": {
                      "rule": "repeated",
                      "type": "Field",
                      "id": 1
                    }
                  },
                  "nested": {
                    "Field": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "type": {
                          "type": "Type",
                          "id": 2
                        }
                      }
                    }
                  }
                },
                "TypeCode": {
                  "values": {
                    "TYPE_CODE_UNSPECIFIED": 0,
                    "BOOL": 1,
                    "INT64": 2,
                    "FLOAT64": 3,
                    "FLOAT32": 15,
                    "TIMESTAMP": 4,
                    "DATE": 5,
                    "STRING": 6,
                    "BYTES": 7,
                    "ARRAY": 8,
                    "STRUCT": 9,
                    "NUMERIC": 10,
                    "JSON": 11,
                    "PROTO": 13,
                    "ENUM": 14
                  }
                },
                "TypeAnnotationCode": {
                  "values": {
                    "TYPE_ANNOTATION_CODE_UNSPECIFIED": 0,
                    "PG_NUMERIC": 2,
                    "PG_JSONB": 3,
                    "PG_OID": 4
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api;api",
            "java_multiple_files": true,
            "java_outer_classname": "LaunchStageProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions",
              "options": {
                "packed": false
              }
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7,
                "IDENTIFIER": 8
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "apiVersion": {
              "type": "string",
              "id": 525000001,
              "extend": "google.protobuf.ServiceOptions"
            },
            "CommonLanguageSettings": {
              "fields": {
                "referenceDocsUri": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "deprecated": true
                  }
                },
                "destinations": {
                  "rule": "repeated",
                  "type": "ClientLibraryDestination",
                  "id": 2
                }
              }
            },
            "ClientLibrarySettings": {
              "fields": {
                "version": {
                  "type": "string",
                  "id": 1
                },
                "launchStage": {
                  "type": "LaunchStage",
                  "id": 2
                },
                "restNumericEnums": {
                  "type": "bool",
                  "id": 3
                },
                "javaSettings": {
                  "type": "JavaSettings",
                  "id": 21
                },
                "cppSettings": {
                  "type": "CppSettings",
                  "id": 22
                },
                "phpSettings": {
                  "type": "PhpSettings",
                  "id": 23
                },
                "pythonSettings": {
                  "type": "PythonSettings",
                  "id": 24
                },
                "nodeSettings": {
                  "type": "NodeSettings",
                  "id": 25
                },
                "dotnetSettings": {
                  "type": "DotnetSettings",
                  "id": 26
                },
                "rubySettings": {
                  "type": "RubySettings",
                  "id": 27
                },
                "goSettings": {
                  "type": "GoSettings",
                  "id": 28
                }
              }
            },
            "Publishing": {
              "fields": {
                "methodSettings": {
                  "rule": "repeated",
                  "type": "MethodSettings",
                  "id": 2
                },
                "newIssueUri": {
                  "type": "string",
                  "id": 101
                },
                "documentationUri": {
                  "type": "string",
                  "id": 102
                },
                "apiShortName": {
                  "type": "string",
                  "id": 103
                },
                "githubLabel": {
                  "type": "string",
                  "id": 104
                },
                "codeownerGithubTeams": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 105
                },
                "docTagPrefix": {
                  "type": "string",
                  "id": 106
                },
                "organization": {
                  "type": "ClientLibraryOrganization",
                  "id": 107
                },
                "librarySettings": {
                  "rule": "repeated",
                  "type": "ClientLibrarySettings",
                  "id": 109
                },
                "protoReferenceDocumentationUri": {
                  "type": "string",
                  "id": 110
                },
                "restReferenceDocumentationUri": {
                  "type": "string",
                  "id": 111
                }
              }
            },
            "JavaSettings": {
              "fields": {
                "libraryPackage": {
                  "type": "string",
                  "id": 1
                },
                "serviceClassNames": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 3
                }
              }
            },
            "CppSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PhpSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PythonSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "NodeSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "DotnetSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                },
                "renamedServices": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "renamedResources": {
                  "keyType": "string",
                  "type": "string",
                  "id": 3
                },
                "ignoredResources": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 4
                },
                "forcedNamespaceAliases": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                },
                "handwrittenSignatures": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 6
                }
              }
            },
            "RubySettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "GoSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "MethodSettings": {
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "longRunning": {
                  "type": "LongRunning",
                  "id": 2
                },
                "autoPopulatedFields": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                }
              },
              "nested": {
                "LongRunning": {
                  "fields": {
                    "initialPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 1
                    },
                    "pollDelayMultiplier": {
                      "type": "float",
                      "id": 2
                    },
                    "maxPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 3
                    },
                    "totalPollTimeout": {
                      "type": "google.protobuf.Duration",
                      "id": 4
                    }
                  }
                }
              }
            },
            "ClientLibraryOrganization": {
              "values": {
                "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED": 0,
                "CLOUD": 1,
                "ADS": 2,
                "PHOTOS": 3,
                "STREET_VIEW": 4,
                "SHOPPING": 5,
                "GEO": 6,
                "GENERATIVE_AI": 7
              }
            },
            "ClientLibraryDestination": {
              "values": {
                "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED": 0,
                "GITHUB": 10,
                "PACKAGE_MANAGER": 20
              }
            },
            "LaunchStage": {
              "values": {
                "LAUNCH_STAGE_UNSPECIFIED": 0,
                "UNIMPLEMENTED": 6,
                "PRELAUNCH": 7,
                "EARLY_ACCESS": 1,
                "ALPHA": 2,
                "BETA": 3,
                "GA": 4,
                "DEPRECATED": 5
              }
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "cloud.google.com/go/longrunning/autogen/longrunningpb;longrunningpb",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name,filter"
                    }
                  ]
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "delete": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "post": "/v1/{name=operations/**}:cancel",
                        "body": "*"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "iam": {
          "nested": {
            "v1": {
              "options": {
                "cc_enable_arenas": true,
                "csharp_namespace": "Google.Cloud.Iam.V1",
                "go_package": "cloud.google.com/go/iam/apiv1/iampb;iampb",
                "java_multiple_files": true,
                "java_outer_classname": "PolicyProto",
                "java_package": "com.google.iam.v1",
                "php_namespace": "Google\\Cloud\\Iam\\V1"
              },
              "nested": {
                "IAMPolicy": {
                  "options": {
                    "(google.api.default_host)": "iam-meta-api.googleapis.com"
                  },
                  "methods": {
                    "SetIamPolicy": {
                      "requestType": "SetIamPolicyRequest",
                      "responseType": "Policy",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:setIamPolicy",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:setIamPolicy",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "GetIamPolicy": {
                      "requestType": "GetIamPolicyRequest",
                      "responseType": "Policy",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:getIamPolicy",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:getIamPolicy",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "TestIamPermissions": {
                      "requestType": "TestIamPermissionsRequest",
                      "responseType": "TestIamPermissionsResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:testIamPermissions",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:testIamPermissions",
                            "body": "*"
                          }
                        }
                      ]
                    }
                  }
                },
                "SetIamPolicyRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "policy": {
                      "type": "Policy",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "updateMask": {
                      "type": "google.protobuf.FieldMask",
                      "id": 3
                    }
                  }
                },
                "GetIamPolicyRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "options": {
                      "type": "GetPolicyOptions",
                      "id": 2
                    }
                  }
                },
                "TestIamPermissionsRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "permissions": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                },
                "TestIamPermissionsResponse": {
                  "fields": {
                    "permissions": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 1
                    }
                  }
                },
                "GetPolicyOptions": {
                  "fields": {
                    "requestedPolicyVersion": {
                      "type": "int32",
                      "id": 1
                    }
                  }
                },
                "Policy": {
                  "fields": {
                    "version": {
                      "type": "int32",
                      "id": 1
                    },
                    "bindings": {
                      "rule": "repeated",
                      "type": "Binding",
                      "id": 4
                    },
                    "auditConfigs": {
                      "rule": "repeated",
                      "type": "AuditConfig",
                      "id": 6
                    },
                    "etag": {
                      "type": "bytes",
                      "id": 3
                    }
                  }
                },
                "Binding": {
                  "fields": {
                    "role": {
                      "type": "string",
                      "id": 1
                    },
                    "members": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2
                    },
                    "condition": {
                      "type": "google.type.Expr",
                      "id": 3
                    }
                  }
                },
                "AuditConfig": {
                  "fields": {
                    "service": {
                      "type": "string",
                      "id": 1
                    },
                    "auditLogConfigs": {
                      "rule": "repeated",
                      "type": "AuditLogConfig",
                      "id": 3
                    }
                  }
                },
                "AuditLogConfig": {
                  "fields": {
                    "logType": {
                      "type": "LogType",
                      "id": 1
                    },
                    "exemptedMembers": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2
                    }
                  },
                  "nested": {
                    "LogType": {
                      "values": {
                        "LOG_TYPE_UNSPECIFIED": 0,
                        "ADMIN_READ": 1,
                        "DATA_WRITE": 2,
                        "DATA_READ": 3
                      }
                    }
                  }
                },
                "PolicyDelta": {
                  "fields": {
                    "bindingDeltas": {
                      "rule": "repeated",
                      "type": "BindingDelta",
                      "id": 1
                    },
                    "auditConfigDeltas": {
                      "rule": "repeated",
                      "type": "AuditConfigDelta",
                      "id": 2
                    }
                  }
                },
                "BindingDelta": {
                  "fields": {
                    "action": {
                      "type": "Action",
                      "id": 1
                    },
                    "role": {
                      "type": "string",
                      "id": 2
                    },
                    "member": {
                      "type": "string",
                      "id": 3
                    },
                    "condition": {
                      "type": "google.type.Expr",
                      "id": 4
                    }
                  },
                  "nested": {
                    "Action": {
                      "values": {
                        "ACTION_UNSPECIFIED": 0,
                        "ADD": 1,
                        "REMOVE": 2
                      }
                    }
                  }
                },
                "AuditConfigDelta": {
                  "fields": {
                    "action": {
                      "type": "Action",
                      "id": 1
                    },
                    "service": {
                      "type": "string",
                      "id": 2
                    },
                    "exemptedMember": {
                      "type": "string",
                      "id": 3
                    },
                    "logType": {
                      "type": "string",
                      "id": 4
                    }
                  },
                  "nested": {
                    "Action": {
                      "values": {
                        "ACTION_UNSPECIFIED": 0,
                        "ADD": 1,
                        "REMOVE": 2
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "type": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/type/expr;expr",
            "java_multiple_files": true,
            "java_outer_classname": "ExprProto",
            "java_package": "com.google.type",
            "objc_class_prefix": "GTP"
          },
          "nested": {
            "Expr": {
              "fields": {
                "expression": {
                  "type": "string",
                  "id": 1
                },
                "title": {
                  "type": "string",
                  "id": 2
                },
                "description": {
                  "type": "string",
                  "id": 3
                },
                "location": {
                  "type": "string",
                  "id": 4
                }
              }
            }
          }
        }
      }
    }
  }
}